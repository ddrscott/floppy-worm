import{P as g}from"./phaser-BlBtQGNw.js";import"./index-DogrX72I.js";const W={name:"Left",difficulty:1,description:"Learn the basics of worm movement"},K={width:1024,height:400},j={wormStart:{x:800,y:50},goal:{x:240,y:350}},z=[],G={metadata:W,dimensions:K,entities:j,platforms:z},O={name:"Right",difficulty:1,description:"To the Right"},Y={width:1024,height:400},L={wormStart:{x:240,y:50},goal:{x:800,y:350}},V=[],q={metadata:O,dimensions:Y,entities:L,platforms:V},J={name:"Swing",difficulty:1,description:"Can you swing it?",modified:"2025-07-24T13:23:05.389Z"},$={width:768,height:800},H={wormStart:{x:192,y:96},goal:{x:133,y:488}},_=[{id:"platform_1",type:"rectangle",x:192,y:416,width:385,height:38,color:"#ff6b6b",physics:{friction:.8,frictionStatic:1,restitution:0}},{id:"platform_2",type:"rectangle",platformType:"electric",x:384,y:790,width:768,height:60,color:"#f8ff00",physics:{friction:.8,frictionStatic:1,restitution:0}}],U={metadata:J,dimensions:$,entities:H,platforms:_},X={name:"Tower",difficulty:3,description:"Climb the challenging tower with alternating platforms",modified:"2025-07-24T13:23:19.378Z"},N={width:1600,height:3e3},Z={wormStart:{x:368,y:2800},goal:{x:960,y:96}},Q=[{x:144,y:2736,width:288,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:1440,y:2592,width:384,height:192,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:144,y:2352,width:288,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:864,y:2208,width:384,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:288,y:1920,width:576,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:1344,y:1920,width:576,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:384,y:1536,width:768,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:1344,y:1440,width:672,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:288,y:1152,width:576,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0}},{x:925,y:990,width:249,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0},angle:-.12134058494042255},{x:915,y:796,width:768,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0},angle:-.3997616233413781},{x:319,y:587,width:246,height:63,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0},angle:.6202167500038069},{x:859,y:432,width:576,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0},angle:-.665065720465055},{x:480,y:192,width:384,height:48,type:"rectangle",color:"#ff6b6b",physics:{friction:1,frictionStatic:1,restitution:0},angle:-.01343456356411088}],tt={metadata:X,dimensions:N,entities:Z,platforms:Q};class et extends g.Scene{constructor(t={}){super(t),this.victoryAchieved=!1,this.victoryReturnTimer=null,this.worm=null,this.wormStartPosition={x:0,y:0}}create(){this.cleanup(),this.events.once("shutdown",()=>{this.cleanup()})}cleanup(){this.worm&&(this.worm.destroy(),this.worm=null),this.victoryAchieved=!1,this.victoryReturnTimer&&(this.victoryReturnTimer.destroy(),this.victoryReturnTimer=null)}victory(){this.victoryAchieved=!0,this.worm&&(this.worm.destroy(),this.worm=null)}resetWorm(){this.worm&&(this.worm.segments.forEach((t,e)=>{const i=e*(this.worm.segmentRadii[e]*2+2);this.matter.body.setPosition(t,{x:this.wormStartPosition.x,y:this.wormStartPosition.y+i}),this.matter.body.setVelocity(t,{x:0,y:0}),this.matter.body.setAngularVelocity(t,0),t.force.x=0,t.force.y=0,t.torque=0}),typeof this.worm.resetState=="function"&&this.worm.resetState())}update(t,e){this.victoryAchieved||this.worm&&typeof this.worm.update=="function"&&this.worm.update(e)}}class it{constructor(t={}){this.settings={pitch:1.2,filterBase:800,resonance:8,attack:5,release:150,lowBoost:.1,dynamics:.8,reverb:.05,swishFactor:.7,...t},this.audioContext=null,this.nodes=null,this.isPlaying=!1,this.volume=0,this.frequency=0}initAudio(){return this.audioContext||(this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.pendingStart=!1,this.audioContext.addEventListener("statechange",()=>{this.audioContext.state==="running"&&this.pendingStart&&(this.pendingStart=!1,this.createAudioNodes())})),this.audioContext.state==="suspended"?(this.audioContext.resume().catch(()=>{}),!1):this.audioContext.state==="running"}createWhiteNoise(t){const e=this.audioContext.sampleRate*t,i=this.audioContext.createBuffer(1,e,this.audioContext.sampleRate),s=i.getChannelData(0);for(let n=0;n<e;n++)s[n]=Math.random()*2-1;return i}start(){if(!this.initAudio()){this.pendingStart=!0;return}this.createAudioNodes()}createAudioNodes(){this.nodes&&this.stop();const t=this.createWhiteNoise(10),e=this.audioContext.createBufferSource();e.buffer=t,e.loop=!0,e.playbackRate.value=this.settings.pitch;const i=this.audioContext.createBiquadFilter();i.type="bandpass",i.frequency.value=this.settings.filterBase,i.Q.value=this.settings.resonance;const s=this.audioContext.createBiquadFilter();s.type="highpass",s.frequency.value=400*this.settings.pitch,s.Q.value=2;const n=this.audioContext.createBiquadFilter();n.type="lowshelf",n.frequency.value=200,n.gain.value=this.settings.lowBoost*12;const o=this.audioContext.createDynamicsCompressor();o.threshold.value=-24+this.settings.dynamics*20,o.knee.value=10,o.ratio.value=2+this.settings.dynamics*6,o.attack.value=.003,o.release.value=.1;const r=this.audioContext.createConvolver(),a=this.audioContext.createGain(),c=this.audioContext.createGain(),h=2,l=3,p=this.audioContext.createBuffer(2,this.audioContext.sampleRate*h,this.audioContext.sampleRate);for(let m=0;m<2;m++){const y=p.getChannelData(m);for(let S=0;S<y.length;S++)y[S]=(Math.random()*2-1)*Math.pow(1-S/y.length,l)}r.buffer=p,a.gain.value=this.settings.reverb*.3,c.gain.value=1-this.settings.reverb*.3;const f=this.audioContext.createGain();f.gain.value=0;const d=this.audioContext.createOscillator();d.frequency.value=.3;const u=this.audioContext.createGain();u.gain.value=20*this.settings.pitch,d.connect(u),u.connect(i.frequency),e.connect(i),i.connect(s),s.connect(n),n.connect(o),o.connect(c),o.connect(r),r.connect(a),c.connect(f),a.connect(f),f.connect(this.audioContext.destination),e.start(),d.start(),this.nodes={source:e,filter:i,filter2:s,lowShelf:n,compressor:o,convolver:r,reverbGain:a,dryGain:c,gain:f,lfo:d},this.isPlaying=!0}stop(){if(this.nodes){try{this.nodes.source.stop(),this.nodes.lfo.stop()}catch{}Object.values(this.nodes).forEach(t=>{if(t&&typeof t.disconnect=="function")try{t.disconnect()}catch{}}),this.nodes=null,this.isPlaying=!1}}update(t,e){if(this.audioContext&&this.audioContext.state==="suspended"&&this.audioContext.resume().catch(()=>{}),!this.nodes||!this.isPlaying)return;this.volume=Math.max(0,Math.min(1,t)),this.frequency=Math.max(0,Math.min(1,e));const i=this.settings.filterBase+this.frequency*3e3*this.settings.swishFactor;this.nodes.filter.frequency.value=i*this.settings.pitch;const s=(400+this.frequency*800)*this.settings.pitch;this.nodes.filter2.frequency.value=s;const n=this.settings.resonance+this.frequency*4;this.nodes.filter.Q.value=Math.min(n,15),this.nodes.gain.gain.value=this.volume*.9}updateSettings(t){this.settings={...this.settings,...t},this.nodes&&this.isPlaying&&(this.nodes.source.playbackRate.value=this.settings.pitch,this.nodes.filter.Q.value=this.settings.resonance,this.nodes.lowShelf.gain.value=this.settings.lowBoost*12,this.nodes.compressor.threshold.value=-24+this.settings.dynamics*20,this.nodes.compressor.ratio.value=2+this.settings.dynamics*6,this.nodes.reverbGain.gain.value=this.settings.reverb*.3,this.nodes.dryGain.gain.value=1-this.settings.reverb*.3,this.update(this.volume,this.frequency))}getSettings(){return{...this.settings}}}class st{constructor(){this.charts=new Map,this.container=null,this.animationFrame=null,this.config={maxHistory:400,chartWidth:200,chartHeight:50,position:{x:20,y:20},backgroundColor:"#000000",backgroundAlpha:.3,gridColor:"#333333",textColor:"#ffffff",lineWidth:1,padding:2,autoScale:!0,showGrid:!0,showLabels:!0,zIndex:1e3,containerId:"tick-helper-container",spacing:10},this.isInitialized=!1}init(){if(this.isInitialized)return;let t=document.getElementById(this.config.containerId);if(t){this.container=t,this.isInitialized=!0;return}this.container=document.createElement("div"),this.container.id=this.config.containerId,this.container.style.position="fixed",this.container.style.top=this.config.position.y+"px",this.container.style.left=this.config.position.x+"px",this.container.style.zIndex=this.config.zIndex,this.container.style.pointerEvents="none",this.container.style.display="flex",this.container.style.flexDirection="column",this.container.style.gap=this.config.spacing+"px",document.body.appendChild(this.container),this.isInitialized=!0,this.startRenderLoop()}startRenderLoop(){const t=()=>{this.render(),this.animationFrame=requestAnimationFrame(t)};t()}createChartCanvas(t,e){const i=document.createElement("canvas"),s=i.getContext("2d");return i.width=this.config.chartWidth,i.height=this.config.chartHeight,i.id=`tick-chart-${t}`,i.style.border="1px solid #666",i.style.borderRadius="4px",i.style.backgroundColor=this.config.backgroundColor+Math.floor(this.config.backgroundAlpha*255).toString(16).padStart(2,"0"),this.container.appendChild(i),{canvas:i,ctx:s}}push(t,e,i="#4ecdc4"){if(this.isInitialized||this.init(),typeof i=="number"&&(i="#"+i.toString(16).padStart(6,"0")),!this.charts.has(t)){const{canvas:n,ctx:o}=this.createChartCanvas(t,i);this.charts.set(t,{name:t,data:[],color:i,min:1/0,max:-1/0,visible:!0,canvas:n,ctx:o})}const s=this.charts.get(t);s.data.push(e),this.config.autoScale&&(s.min=Math.min(s.min,e),s.max=Math.max(s.max,e)),s.data.length>this.config.maxHistory&&(s.data.shift(),this.config.autoScale&&(s.min=Math.min(...s.data),s.max=Math.max(...s.data)))}setConfig(t){Object.assign(this.config,t)}toggle(t){if(this.charts.has(t)){const e=this.charts.get(t);e.visible=!e.visible,e.canvas.style.display=e.visible?"block":"none"}}clear(t){if(this.charts.has(t)){const e=this.charts.get(t);e.data=[],e.min=1/0,e.max=-1/0}}clearAll(){this.charts.forEach(t=>{t.data=[],t.min=1/0,t.max=-1/0})}render(){this.charts.forEach(t=>{t.visible&&t.data.length>0&&this.renderChart(t)})}renderChart(t){const e=this.config.padding,i=t.ctx,s=t.canvas.width,n=t.canvas.height;i.clearRect(0,0,s,n);let o=t.min,r=t.max;o===r&&(o-=1,r+=1);const a=r-o;if(a!==0){if(this.config.showGrid&&this.drawGrid(t,0,0,s,n,e),t.data.length>1){i.strokeStyle=t.color,i.lineWidth=this.config.lineWidth;const c=s-e*2,h=n-e*2,l=e,p=e;i.beginPath();const f=t.data[0],d=l,u=p+h-(f-o)/a*h;i.moveTo(d,u);for(let m=1;m<t.data.length;m++){const y=t.data[m],S=l+m/(t.data.length-1)*c,b=p+h-(y-o)/a*h;i.lineTo(S,b)}i.stroke()}if(this.config.showLabels){i.fillStyle=this.config.textColor,i.font="10px monospace",i.textAlign="left",i.fillText(t.name,3,12),i.textAlign="right",i.fillText(`${r.toFixed(1)}`,s-3,12);const c=t.data[t.data.length-1]||0;i.font="30px monospace",i.textAlign="left",i.fillText(c.toFixed(1),3,n-5),i.font="10px monospace",i.textAlign="right",i.fillText(`${o.toFixed(1)}`,s-3,n-3)}}}drawGrid(t,e,i,s,n,o){const r=t.ctx;r.strokeStyle=this.config.gridColor,r.lineWidth=.5;const a=s-o*2,c=n-o*2,h=e+o,l=i+o;r.beginPath();for(let p=0;p<=1;p++){const f=l+p*c;r.moveTo(h,f),r.lineTo(h+a,f)}for(let p=0;p<=3;p++){const f=h+p/3*a;r.moveTo(f,l),r.lineTo(f,l+c)}r.stroke()}destroy(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null),this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container),this.container=null,this.charts.clear(),this.isInitialized=!1}}const nt=new st;class ot{constructor(t,e,i,s={}){this.scene=t,this.matter=t.matter,this.Matter=g.Physics.Matter.Matter,this.config={baseRadius:10,baseColor:16753922,segmentSizes:[.75,1,1,.9,.85,.8,.8,.8,.8,.8,.8,.8],segmentDensity:.015,segmentFriction:1,segmentFrictionStatic:.8,segmentRestitution:1e-4,constraintStiffness:.8,constraintDamping:.2,constraintLength:1,showDebug:!0,...s},this.segmentCollisions=[],this.initializeAudio(),this.create(e,i),this.setupCollisionDetection()}colorToHex(t){return"#"+t.toString(16).padStart(6,"0")}create(t,e){const i=[],s=[],n=[];let o=e;for(let r=0;r<this.config.segmentSizes.length;r++){const a=this.config.baseRadius*this.config.segmentSizes[r];n.push(a);const c=this.matter.add.circle(t,o,a,{friction:this.config.segmentFriction,frictionStatic:this.config.segmentFrictionStatic,density:this.config.segmentDensity,restitution:this.config.segmentRestitution,slop:.01,render:{fillStyle:"#"+this.getSegmentColor(r,this.config.segmentSizes.length).toString(16).padStart(6,"0"),strokeStyle:"#"+this.getDarkerColor(this.getSegmentColor(r,this.config.segmentSizes.length)).toString(16).padStart(6,"0"),lineWidth:2,visible:!0}}),h=this.scene.add.graphics();if(h.fillStyle(this.getSegmentColor(r,this.config.segmentSizes.length),1),h.lineStyle(2,this.getDarkerColor(this.getSegmentColor(r,this.config.segmentSizes.length)),1),h.fillCircle(0,0,a),h.strokeCircle(0,0,a),c.graphics=h,i.push(c),r<this.config.segmentSizes.length-1){const l=this.config.baseRadius*this.config.segmentSizes[r+1];o+=a+l+2}}this.connectionDots=[];for(let r=0;r<i.length-1;r++){const a=i[r],c=i[r+1],h=n[r],l=n[r+1],p=this.Matter.Constraint.create({bodyA:a,bodyB:c,pointA:{x:0,y:h+1},pointB:{x:0,y:-l-1},length:this.config.constraintLength,stiffness:this.config.constraintStiffness,damping:this.config.constraintDamping,render:{visible:!0}});this.Matter.World.add(this.matter.world.localWorld,p),s.push(p);const f=(a.position.x+c.position.x)/2,d=(a.position.y+c.position.y)/2,u=this.scene.add.graphics();u.fillStyle(this.config.baseColor,1),u.fillCircle(0,0,this.config.baseRadius*.4),u.setPosition(f,d),this.connectionDots.push(u)}this.compressionSprings=[];for(let r=0;r<i.length-1;r++){const a=i[r],c=i[r+1],h=n[r]+n[r+1],l=this.Matter.Constraint.create({bodyA:a,bodyB:c,pointA:{x:0,y:0},pointB:{x:0,y:0},length:h,stiffness:.005,damping:.9});this.compressionSprings.push(l)}this.Matter.World.add(this.matter.world.localWorld,this.compressionSprings),this.segments=i,this.constraints=s,this.segmentRadii=n,this.applyInitialImpulse()}update(t){this.updateMovement(t),this.segments.forEach(e=>{e.graphics&&(e.graphics.x=e.position.x,e.graphics.y=e.position.y)}),this.connectionDots.forEach((e,i)=>{if(i<this.segments.length-1){const s=this.segments[i],n=this.segments[i+1];e.x=(s.position.x+n.position.x)/2,e.y=(s.position.y+n.position.y)/2}}),this.updateAudio(t)}updateMovement(t){console.error("WormBase.updateMovement() not implemented")}updateAudio(t){if(!this.whooshSynthesizer){let d=null;try{d=new it({pitch:1.1,filterBase:900,resonance:16,lowBoost:1,reverb:.03,swishFactor:.8}),d.start(),this.whooshSynthesizer=d}catch{return}}if(!this.whooshSynthesizer)return;const e=this.getHead(),i=this.getTail(),s=Math.sqrt(e.velocity.x**2+e.velocity.y**2),n=Math.sqrt(i.velocity.x**2+i.velocity.y**2),o=Math.max(s,n),a=Math.max(0,o-this.audioState.volumeThreshold)/(this.audioState.maxVelocity-this.audioState.volumeThreshold),c=Math.pow(Math.min(1,a),1.8),l=this.segments.filter((d,u)=>!this.segmentCollisions[u].isColliding).length/this.segments.length;this.audioState.targetVolume=l>.3?c*.9:0,this.audioState.targetFrequency=c;const p=this.audioState.smoothingFactor;this.audioState.currentVolume+=(this.audioState.targetVolume-this.audioState.currentVolume)*p,this.audioState.currentFrequency+=(this.audioState.targetFrequency-this.audioState.currentFrequency)*p;const f=this.audioState.currentVolume<.02?0:this.audioState.currentVolume;this.whooshSynthesizer.update(f,this.audioState.currentFrequency)}initializeAudio(){this.whooshSynthesizer=null,this.audioState={targetVolume:0,currentVolume:0,targetFrequency:0,currentFrequency:0,smoothingFactor:.5,volumeThreshold:10,maxVelocity:30}}stopAudio(){this.whooshSynthesizer&&(this.whooshSynthesizer.stop(),this.whooshSynthesizer=null)}retryAudioInit(){this.stopAudio()}getHead(){return this.segments[0]}getTail(){return this.segments[this.segments.length-1]}getSegmentColor(t,e){return t===0?16739179:t<3?16753922:15909898}getDarkerColor(t){const e=t>>16&255,i=t>>8&255,s=t&255;return e*.8<<16|i*.8<<8|s*.8}updateConfig(t){if(Object.assign(this.config,t),this.segments&&this.segments.forEach((e,i)=>{e.friction=this.config.segmentFriction,e.frictionStatic=this.config.segmentFrictionStatic,e.restitution=this.config.segmentRestitution,this.matter.body.setDensity(e,this.config.segmentDensity)}),this.constraints)for(let e=0;e<this.segments.length-1&&e<this.constraints.length;e++)this.constraints[e].stiffness=this.config.constraintStiffness,this.constraints[e].damping=this.config.constraintDamping,this.constraints[e].length=this.config.constraintLength}updateCompressionStiffness(t){this.compressionSprings&&Array.isArray(this.compressionSprings)&&this.compressionSprings.forEach(e=>{e&&typeof e=="object"&&"stiffness"in e&&(e.stiffness=t)})}destroy(){this.segments&&this.segments.forEach((t,e)=>{t.graphics&&t.graphics.destroy(),this.matter&&this.matter.world&&this.matter.world.remove(t)}),this.constraints&&this.constraints.forEach((t,e)=>{this.matter&&this.matter.world&&this.matter.world.remove(t)}),this.compressionSprings&&this.compressionSprings.forEach((t,e)=>{this.matter&&this.matter.world&&this.matter.world.remove(t)}),this.connectionDots&&this.connectionDots.forEach(t=>{t&&t.destroy()}),this.cleanupCollisionDetection(),this.stopAudio(),nt.clearAll()}setupCollisionDetection(){this.segmentCollisions=this.segments.map(()=>({isColliding:!1,contactPoint:{x:0,y:0},surfaceBody:null,surfaceNormal:{x:0,y:1}})),this.matter.world.on("collisionstart",this.handleCollisionStart.bind(this)),this.matter.world.on("collisionend",this.handleCollisionEnd.bind(this))}handleCollisionStart(t){this.segments&&t.pairs.forEach(e=>{const{bodyA:i,bodyB:s}=e,n=this.segments.findIndex(p=>p===i||p===s);if(n===-1)return;const o=this.segments[n],r=o===i?s:i;if(!r.isStatic)return;const a=e.collision,c=a.supports&&a.supports.length>0?{x:a.supports[0].x,y:a.supports[0].y}:{x:o.position.x,y:o.position.y},h=o===i?{x:a.normal.x,y:a.normal.y}:{x:-a.normal.x,y:-a.normal.y},l=r.isIcePlatform||!1;this.segmentCollisions[n]={isColliding:!0,contactPoint:c,surfaceBody:r,surfaceNormal:h,isOnIce:l},r.platformInstance&&typeof r.platformInstance.onCollision=="function"&&r.platformInstance.onCollision(o,{contactPoint:c,normal:h,surfaceBody:r})})}handleCollisionEnd(t){this.segments&&t.pairs.forEach(e=>{const{bodyA:i,bodyB:s}=e,n=this.segments.findIndex(a=>a===i||a===s);if(n===-1)return;const o=this.segments[n],r=o===i?s:i;r.isStatic&&(r.platformInstance&&typeof r.platformInstance.onCollisionEnd=="function"&&r.platformInstance.onCollisionEnd(o,{surfaceBody:r}),this.segmentCollisions[n]={isColliding:!1,contactPoint:{x:0,y:0},surfaceBody:null,surfaceNormal:{x:0,y:1},isOnIce:!1})})}cleanupCollisionDetection(){this.matter&&this.matter.world&&(this.matter.world.off("collisionstart",this.handleCollisionStart),this.matter.world.off("collisionend",this.handleCollisionEnd))}getSegmentRange(t,e){if(!this.segments)return{startIndex:0,endIndex:0,count:0};const i=this.segments.length,s=Math.floor(i*t),n=Math.floor(i*e),o=n-s;return{startIndex:s,endIndex:n,count:o}}getSegmentsInRange(t,e){if(!this.segments)return[];const{startIndex:i,endIndex:s}=this.getSegmentRange(t,e),n=[];for(let o=i;o<s&&o<this.segments.length;o++)n.push({index:o,segment:this.segments[o]});return n}getTouchingSegments(t,e){if(!this.segments||!this.segmentCollisions)return[];const{startIndex:i,endIndex:s}=this.getSegmentRange(t,e),n=[];for(let o=i;o<s&&o<this.segments.length;o++)this.segmentCollisions[o].isColliding&&n.push({index:o,segment:this.segments[o],collision:this.segmentCollisions[o]});return n}getIceSegmentsInRange(t,e){if(!this.segments||!this.segmentCollisions)return[];const{startIndex:i,endIndex:s}=this.getSegmentRange(t,e),n=[];for(let o=i;o<s&&o<this.segments.length;o++){const r=this.segmentCollisions[o];r&&r.isColliding&&r.isOnIce&&n.push({index:o,segment:this.segments[o],collision:r})}return n}hasIceInRange(t,e){return this.getIceSegmentsInRange(t,e).length>0}getGroundedSegmentsInRange(t,e){if(!this.segments||!this.segmentCollisions)return[];const{startIndex:i,endIndex:s}=this.getSegmentRange(t,e),n=[];for(let o=i;o<s&&o<this.segments.length;o++){const r=this.segmentCollisions[o];r&&r.isColliding&&r.surfaceBody&&r.surfaceBody.isStatic&&n.push({index:o,segment:this.segments[o],collision:r,distanceFromStart:Math.abs(o-i)})}return n.sort((o,r)=>o.distanceFromStart-r.distanceFromStart),n}calculateStickMagnitude(t){return Math.sqrt(t.x*t.x+t.y*t.y)}normalizeStickDirection(t){const e=this.calculateStickMagnitude(t);return e===0?{x:0,y:0}:{x:t.x/e,y:t.y/e}}applyInitialImpulse(){setTimeout(()=>{if(this.segments&&this.segments.length>0){const t=Math.floor(this.segments.length/2),e=this.segments[t];if(e&&e.position){const i=(Math.random()-.5)*.004,s=(Math.random()-.5)*.002;this.scene.matter.body.applyForce(e,e.position,{x:i,y:s})}}},5)}}class rt extends ot{constructor(t,e,i,s={}){const n={flattenIdle:1e-6,flattenStiffness:.5,headColor:16739179,headStrokeColor:15158332,tailColor:7649791,tailStrokeColor:3447003,dotColor:2899536,anchorRadius:50,anchorStiffness:.5,anchorDamping:.05,anchorSensorRadius:5,anchorDensity:1e-4,velocityDamping:.5,impulseMultiplier:.002,stickDeadzone:.06,positionForceMagnitude:1e-5,minForceThreshold:1e-5,minDistanceThreshold:.1,ground:{force:.02,segments:.2,reactiveMultiplier:.8,centerWeight:.5},stickIndicatorRadius:8,rangeIndicatorAlpha:.4,rangeIndicatorLineWidth:1,jump:{springLengthMultiplier:1.2,triggerThreshold:.01,stiffness:.0375,baseCompressionStiffness:.05,maxCompressionStiffness:.7,compressionTriggerSensitivity:1,useGroundAnchor:!1,laser:{lineWidth:4,glowWidth:8,glowAlpha:.5,length:200,arrowSize:15,arrowOffset:10,fadeDuration:1e3}},grab:{activationThreshold:.2,constraintStiffness:.2,constraintDamping:.5,headSegmentCount:.3,tailSegmentCount:.3,visual:{circleRadius:15,pulseScale:.25,pulseDuration:2500,circleColor:3931947,circleAlpha:.9}},targetFrameRate:60,headAttachIndex:1,tailAttachFromEnd:2,tailSpringAttachPercent:.4,swapControls:!1,...s};super(t,e,i,n),this.anchorRadius=n.anchorRadius,this.anchorStiffness=n.anchorStiffness,this.anchorDamping=n.anchorDamping,this.velocityDamping=n.velocityDamping,this.impulseMultiplier=n.impulseMultiplier,this.groundingForce=n.ground.force,this.groundingSegments=n.ground.segments,this.targetFrameTime=1e3/n.targetFrameRate,this.leftStickState={x:0,y:0,prevX:0,prevY:0,velocity:{x:0,y:0}},this.rightStickState={x:0,y:0,prevX:0,prevY:0,velocity:{x:0,y:0}},this.keyboardConfig={maxDuration:200,curve:2,...s.keyboardConfig},this.keyboardState={left:{w:0,a:0,s:0,d:0},right:{up:0,left:0,down:0,right:0}},this.stickyConstraints={head:[],tail:[]},this.stickinessCircles=new Map,this.anchors={head:{body:null,constraint:null,attachIndex:n.headAttachIndex,restPos:{x:0,y:0},rangeGraphics:null,stickIndicator:null,color:this.config.headColor,strokeColor:this.config.headStrokeColor,stickState:n.swapControls?this.rightStickState:this.leftStickState},tail:{body:null,constraint:null,attachIndex:0,restPos:{x:0,y:0},rangeGraphics:null,stickIndicator:null,color:this.config.tailColor,strokeColor:this.config.tailStrokeColor,stickState:n.swapControls?this.leftStickState:this.rightStickState}},this.anchors.tail.attachIndex=this.segments.length-n.tailAttachFromEnd,this.sections={head:{name:"head",stick:n.swapControls?this.rightStickState:this.leftStickState,anchor:this.anchors.head,springData:null,segmentRange:{start:0,end:this.config.grab.headSegmentCount},stickinessSegmentCount:this.config.grab.headSegmentCount,color:this.config.headColor,strokeColor:this.config.headStrokeColor,oppositeRangeForGrounding:{start:.7,end:1}},tail:{name:"tail",stick:n.swapControls?this.leftStickState:this.rightStickState,anchor:this.anchors.tail,springData:null,segmentRange:{start:1-this.config.grab.tailSegmentCount,end:1},stickinessSegmentCount:this.config.grab.tailSegmentCount,color:this.config.tailColor,strokeColor:this.config.tailStrokeColor,oppositeRangeForGrounding:{start:0,end:.3}}},this.createAnchors(),this.jumpSprings={head:{spring:null,attached:!1,length:0,laser:this.scene.add.graphics(),color:this.config.headColor,getSegments:()=>({from:this.segments[0],to:this.segments[this.segments.length-2]})},tail:{spring:null,attached:!1,length:0,laser:this.scene.add.graphics(),color:this.config.tailColor,getSegments:()=>({from:this.segments[this.segments.length-1],to:this.segments[1]})}},Object.values(this.jumpSprings).forEach(o=>{o.laser.setDepth(100)}),this.sections.head.springData=this.jumpSprings.head,this.sections.tail.springData=this.jumpSprings.tail,this.calculateInitialLengths()}createAnchors(){const t=[];Object.entries(this.anchors).forEach(([e,i])=>{const s=this.segments[i.attachIndex];i.body=this.matter.add.circle(s.position.x,s.position.y,this.config.anchorSensorRadius,{isSensor:!0,density:this.config.anchorDensity,render:{fillStyle:this.colorToHex(i.color),strokeStyle:this.colorToHex(i.strokeColor),lineWidth:2,visible:this.config.showDebug}}),i.constraint=this.Matter.Constraint.create({bodyA:i.body,bodyB:s,stiffness:this.anchorStiffness,damping:this.anchorDamping,length:0,render:{visible:this.config.showDebug,strokeStyle:this.colorToHex(i.color),lineWidth:2}}),t.push(i.constraint),i.restPos.x=s.position.x,i.restPos.y=s.position.y,i.rangeGraphics=this.scene.add.graphics(),i.rangeGraphics.lineStyle(this.config.rangeIndicatorLineWidth,i.color,this.config.rangeIndicatorAlpha),i.rangeGraphics.strokeCircle(i.restPos.x,i.restPos.y,this.anchorRadius),i.stickIndicator=this.scene.add.graphics(),i.stickIndicator.fillStyle(i.color,.8),i.stickIndicator.fillCircle(0,0,this.config.stickIndicatorRadius)}),this.Matter.World.add(this.matter.world.localWorld,t)}calculateInitialLengths(){if(this.segments.length>2){const t=this.segments[0],e=this.segments[this.segments.length-2];this.jumpSprings.head.length=Phaser.Math.Distance.BetweenPoints(t.position,e.position)*this.config.jump.springLengthMultiplier}if(this.segments.length>2){const t=this.segments[1],e=this.segments[this.segments.length-1];this.jumpSprings.tail.length=Phaser.Math.Distance.BetweenPoints(t.position,e.position)*this.config.jump.springLengthMultiplier}}createJumpSegment(t,e,i,s){return this.Matter.Constraint.create({bodyA:t,bodyB:e,length:i,stiffness:s})}update(t){super.update(t)}destroy(){console.log("DoubleWorm.destroy() - Starting cleanup");const t=Object.keys(this.anchors).length;Object.values(this.anchors).forEach(s=>{if(s.body&&this.matter&&this.matter.world)try{this.matter.world.remove(s.body)}catch(n){console.warn("Failed to remove anchor body:",n)}if(s.constraint&&this.matter&&this.matter.world)try{this.matter.world.remove(s.constraint)}catch(n){console.warn("Failed to remove anchor constraint:",n)}if(s.rangeGraphics)try{s.rangeGraphics.destroy()}catch(n){console.warn("Failed to destroy range graphics:",n)}if(s.stickIndicator)try{s.stickIndicator.destroy()}catch(n){console.warn("Failed to destroy stick indicator:",n)}}),console.log(`Cleaned up ${t} anchor constraints`);let e=0;Object.values(this.jumpSprings).forEach(s=>{if(s.spring&&s.attached&&this.matter&&this.matter.world)try{this.Matter.World.remove(this.matter.world.localWorld,s.spring),e++}catch(n){console.warn("Failed to remove jump spring:",n)}if(s.laser)try{s.laser.destroy()}catch(n){console.warn("Failed to destroy spring laser:",n)}s.isGroundAnchored&&(s.isGroundAnchored=!1,s.groundBody=null,s.groundedSegment=null)}),console.log(`Cleaned up ${e} jump spring constraints`);let i=0;this.stickyConstraints&&this.matter&&this.matter.world&&Object.values(this.stickyConstraints).forEach(s=>{s.forEach(n=>{try{n.constraint&&(this.Matter.World.remove(this.matter.world.localWorld,n.constraint),this.removeStickinessCircle(n.constraint),i++)}catch(o){console.warn("Failed to remove sticky constraint:",o)}})}),console.log(`Cleaned up ${i} sticky constraints`),this.stickinessCircles&&(this.stickinessCircles.forEach((s,n)=>{s&&s.scene&&s.destroy()}),this.stickinessCircles.clear()),console.log("DoubleWorm.destroy() - Calling parent destroy"),super.destroy(),console.log("DoubleWorm.destroy() completed")}updateMovement(t){var M,k,v,I,T,F;this.updateStickDisplay();const e=(v=(k=(M=this.scene)==null?void 0:M.input)==null?void 0:k.gamepad)==null?void 0:v.getPad(0),i=t/1e3;this.leftGrab=e&&e.buttons[4]?e.buttons[4].value:0,this.rightGrab=e&&e.buttons[5]?e.buttons[5].value:0;let s,n;if(e){s=e.leftStick,n=e.rightStick;const w=this.simulateStickFromKeyboard("left",t),C=this.simulateStickFromKeyboard("right",t),P=Math.sqrt(s.x*s.x+s.y*s.y);Math.sqrt(w.x*w.x+w.y*w.y)>P&&(s=w);const R=Math.sqrt(n.x*n.x+n.y*n.y);Math.sqrt(C.x*C.x+C.y*C.y)>R&&(n=C)}else s=this.simulateStickFromKeyboard("left",t),n=this.simulateStickFromKeyboard("right",t);this.updateStickState(this.leftStickState,s,i),this.updateStickState(this.rightStickState,n,i);const o=this.config.swapControls?n:s,r=this.config.swapControls?s:n,a=this.updateSectionAnchors([{section:this.sections.head,stick:o},{section:this.sections.tail,stick:r}]),c=e&&e.buttons[6]?e.buttons[6].value:0,h=e&&e.buttons[7]?e.buttons[7].value:0,l=this.scene.input.keyboard,p=(I=l.keys[Phaser.Input.Keyboard.KeyCodes.SPACE])==null?void 0:I.isDown,f=((T=l.keys[191])==null?void 0:T.isDown)||((F=l.keys[Phaser.Input.Keyboard.KeyCodes.QUESTION_MARK])==null?void 0:F.isDown)||l.addKey&&l.addKey(191).isDown,d=this.config.swapControls?Math.max(h,f?1:0):Math.max(c,p?1:0),u=this.config.swapControls?Math.max(c,p?1:0):Math.max(h,f?1:0);this.handleJumpSpring("head",d),this.handleJumpSpring("tail",u);const m=Math.max(d,u),y=this.config.jump.baseCompressionStiffness+m*this.config.jump.compressionTriggerSensitivity*(this.config.jump.maxCompressionStiffness-this.config.jump.baseCompressionStiffness);this.updateCompressionStiffness(y);const S=this.config.swapControls?this.rightGrab>0:this.leftGrab>0,b=this.config.swapControls?this.leftGrab>0:this.rightGrab>0;this.updateStickinessSystemSections([{section:this.sections.head,stick:o,active:S},{section:this.sections.tail,stick:r,active:b}]),this.cleanupInvalidStickyConstraints(),this.applyGroundingForce(a.head,a.tail)}applyGroundingForce(t,e){const i=Math.abs(Math.min(0,((t==null?void 0:t.y)||0)+((e==null?void 0:e.y)||0)));if(i<=.01)return;const s=this.groundingForce,n=i*this.config.ground.reactiveMultiplier,o=this.segments.length,r=Math.floor(o*this.groundingSegments),a=Math.floor((o-r)/2),c=a+r;for(let h=a;h<c&&h<o;h++){const l=this.segments[h],f=1-Math.abs(h-o/2)/(r/2),u={x:0,y:(s+n)*(this.config.ground.centerWeight+f*this.config.ground.centerWeight)};this.matter.body.applyForce(l,l.position,u)}}updateStickDisplay(){Object.values(this.anchors).forEach(t=>{t.rangeGraphics.clear(),t.rangeGraphics.lineStyle(this.config.rangeIndicatorLineWidth,t.color,this.config.rangeIndicatorAlpha),t.rangeGraphics.strokeCircle(t.restPos.x,t.restPos.y,this.anchorRadius),t.stickIndicator.x=t.restPos.x+t.stickState.x*this.anchorRadius,t.stickIndicator.y=t.restPos.y+t.stickState.y*this.anchorRadius})}updateSectionAnchors(t){const e={};return t.forEach(({section:i})=>{e[i.name]=this.updateAnchorPositionSection(i)}),e}updateAnchorPositionSection(t){const e=t.anchor;if(!e.body)return{x:0,y:0};let i={x:0,y:0};const s=this.segments[e.attachIndex],n=t.stick,o=e.restPos;if(o.x=s.position.x,o.y=s.position.y,Math.abs(n.x)<=this.config.stickDeadzone&&Math.abs(n.y)<=this.config.stickDeadzone&&(this.Matter.Body.setPosition(e.body,{x:s.position.x,y:s.position.y}),this.Matter.Body.setVelocity(e.body,{x:0,y:0})),Math.abs(n.x)>this.config.stickDeadzone||Math.abs(n.y)>this.config.stickDeadzone){const r=o.x+n.x*this.anchorRadius,a=o.y+n.y*this.anchorRadius;this.Matter.Body.setPosition(e.body,{x:r,y:a});const c=r-s.position.x,h=a-s.position.y,l=Math.sqrt(c*c+h*h);if(l>this.config.minDistanceThreshold){const p=l*this.config.positionForceMagnitude,f=c/l*p,d=h/l*p;this.matter.body.applyForce(s,s.position,{x:f,y:d}),i.x+=f,i.y+=d}}if((Math.abs(n.x)>this.config.stickDeadzone||Math.abs(n.y)>this.config.stickDeadzone)&&!n.released&&!n.returningToCenter){const r=s.mass,a=n.velocity.x*this.impulseMultiplier*r,c=n.velocity.y*this.impulseMultiplier*r;(Math.abs(a)>this.config.minForceThreshold||Math.abs(c)>this.config.minForceThreshold)&&(this.matter.body.applyForce(s,s.position,{x:a,y:c}),i.x+=a,i.y+=c)}return i}updateStickState(t,e,i){if(!e)return;t.prevX=t.x,t.prevY=t.y,t.x=e.x,t.y=e.y;const s=e.keyboardRelease||!1,n=Math.sqrt(t.prevX*t.prevX+t.prevY*t.prevY),o=Math.sqrt(t.x*t.x+t.y*t.y),r=o<n*.85&&o<n-.1&&o>this.config.stickDeadzone,a=t.x-t.prevX,c=t.y-t.prevY;if(i>0&&!s&&!r){const d=this.targetFrameTime/1e3,u=i/d;t.velocity.x=a/i*u,t.velocity.y=c/i*u}else(s||r)&&(t.velocity.x=0,t.velocity.y=0);t.returningToCenter=r;const h=i*(this.config.targetFrameRate/60),l=Math.pow(this.velocityDamping,h);t.velocity.x*=l,t.velocity.y*=l;const p=Math.abs(t.prevX)>this.config.stickDeadzone||Math.abs(t.prevY)>this.config.stickDeadzone,f=Math.abs(t.x)>this.config.stickDeadzone||Math.abs(t.y)>this.config.stickDeadzone;p&&!f&&!s?t.released=!0:t.released=!1}simulateStickFromKeyboard(t,e){var y,S,b,M,k,v,I,T,F,w,C,P;const i=this.scene.input.keyboard,s=this.keyboardState[t],n=Phaser.Input.Keyboard.KeyCodes;let o,r,a,c;t==="left"?(o=((y=i.keys[n.W])==null?void 0:y.isDown)||this.scene.wasd&&((S=this.scene.wasd.W)==null?void 0:S.isDown)||i.checkDown(i.addKey(n.W)),r=((b=i.keys[n.A])==null?void 0:b.isDown)||this.scene.wasd&&((M=this.scene.wasd.A)==null?void 0:M.isDown)||i.checkDown(i.addKey(n.A)),a=((k=i.keys[n.S])==null?void 0:k.isDown)||this.scene.wasd&&((v=this.scene.wasd.S)==null?void 0:v.isDown)||i.checkDown(i.addKey(n.S)),c=((I=i.keys[n.D])==null?void 0:I.isDown)||this.scene.wasd&&((T=this.scene.wasd.D)==null?void 0:T.isDown)||i.checkDown(i.addKey(n.D))):(o=(F=i.keys[n.UP])==null?void 0:F.isDown,r=(w=i.keys[n.LEFT])==null?void 0:w.isDown,a=(C=i.keys[n.DOWN])==null?void 0:C.isDown,c=(P=i.keys[n.RIGHT])==null?void 0:P.isDown);let h=!1;t==="left"?(!o&&s.w>0&&(h=!0),!r&&s.a>0&&(h=!0),!a&&s.s>0&&(h=!0),!c&&s.d>0&&(h=!0),s.w=o?Math.min(s.w+e,this.keyboardConfig.maxDuration):0,s.a=r?Math.min(s.a+e,this.keyboardConfig.maxDuration):0,s.s=a?Math.min(s.s+e,this.keyboardConfig.maxDuration):0,s.d=c?Math.min(s.d+e,this.keyboardConfig.maxDuration):0):(!o&&s.up>0&&(h=!0),!r&&s.left>0&&(h=!0),!a&&s.down>0&&(h=!0),!c&&s.right>0&&(h=!0),s.up=o?Math.min(s.up+e,this.keyboardConfig.maxDuration):0,s.left=r?Math.min(s.left+e,this.keyboardConfig.maxDuration):0,s.down=a?Math.min(s.down+e,this.keyboardConfig.maxDuration):0,s.right=c?Math.min(s.right+e,this.keyboardConfig.maxDuration):0);const l=this.keyboardConfig.curve,p=this.keyboardConfig.maxDuration,f=E=>{const R=E/p;return Math.pow(R,1/l)};let d=0,u=0;t==="left"?(s.a>0&&(d-=f(s.a)),s.d>0&&(d+=f(s.d)),s.w>0&&(u-=f(s.w)),s.s>0&&(u+=f(s.s))):(s.left>0&&(d-=f(s.left)),s.right>0&&(d+=f(s.right)),s.up>0&&(u-=f(s.up)),s.down>0&&(u+=f(s.down)));const m=Math.sqrt(d*d+u*u);return m>1&&(d/=m,u/=m),{x:d,y:u,keyboardRelease:h}}showJumpTrajectory(t,e,i){const s=this.jumpSprings[t],n=s.laser,o=s.color;n.clear();const r=i.position.x-e.position.x,a=i.position.y-e.position.y,c=Math.sqrt(r*r+a*a);if(c>0){const h=r/c,l=a/c,p=this.jumpSprings[t].length,f=Math.max(0,Math.min(1,(p-c)/p)),d=p*(f*1.3);n.lineStyle(this.config.jump.laser.lineWidth,o,1),n.beginPath(),n.moveTo(e.position.x,e.position.y),n.lineTo(e.position.x+h*d,e.position.y+l*d),n.strokePath(),n.lineStyle(this.config.jump.laser.glowWidth,o,this.config.jump.laser.glowAlpha),n.beginPath(),n.moveTo(e.position.x,e.position.y),n.lineTo(e.position.x+h*d,e.position.y+l*d),n.strokePath();const u=this.config.jump.laser.arrowSize,m=e.position.x+h*(d-this.config.jump.laser.arrowOffset),y=e.position.y+l*(d-this.config.jump.laser.arrowOffset);n.fillStyle(o,1),n.beginPath(),n.moveTo(m+h*u,y+l*u),n.lineTo(m-l*u/2,y+h*u/2),n.lineTo(m+l*u/2,y-h*u/2),n.closePath(),n.fillPath(),n.alpha=1,this.scene.tweens.add({targets:n,alpha:0,duration:this.config.jump.laser.fadeDuration,ease:"Linear",onComplete:()=>{n.clear()}})}}handleJumpSpring(t,e){const i=this.config.jump.triggerThreshold,s=e>i,n=this.jumpSprings[t];n&&(s&&!n.attached?this.attachSpring(t,e):!s&&n.attached?this.detachSpring(t):s&&n.spring&&this.updateSpringStiffness(t,e))}attachSpring(t,e){const i=this.jumpSprings[t],s=i.getSegments(),n=this.calculateStiffness(e),o=this.sections[t],r=this.getGroundedSegmentsInRange(o.oppositeRangeForGrounding.start,o.oppositeRangeForGrounding.end),a=this.hasIceInRange(o.oppositeRangeForGrounding.start,o.oppositeRangeForGrounding.end);if(this.config.jump.useGroundAnchor&&r.length>0&&!a){const c=s.from,h=r[0],l=this.createGroundAnchoredSpring(c,h,i.length,n);i.spring=l.constraint,i.isGroundAnchored=!0,i.groundBody=l.groundBody,i.groundedSegment=l.groundedSegment,this.showJumpTrajectory(t,h.segment,c)}else i.spring=this.createJumpSegment(s.from,s.to,i.length,n),i.isGroundAnchored=!1,this.showJumpTrajectory(t,s.to,s.from);this.Matter.World.add(this.matter.world.localWorld,i.spring),i.attached=!0}detachSpring(t){const e=this.jumpSprings[t];e.spring&&(this.Matter.World.remove(this.matter.world.localWorld,e.spring),e.spring=null,e.attached=!1,e.isGroundAnchored&&(e.isGroundAnchored=!1,e.groundBody=null,e.groundedSegment=null))}updateSpringStiffness(t,e){const i=this.jumpSprings[t];if(i.spring){if(i.isGroundAnchored&&i.groundedSegment){const s=this.segments.indexOf(i.groundedSegment),n=this.segmentCollisions[s];if(!n||!n.isColliding||n.surfaceBody!==i.groundBody){this.convertToSegmentSpring(t,e);return}}i.spring.stiffness=this.calculateStiffness(e)}}calculateStiffness(t){return t*this.config.jump.stiffness}convertToSegmentSpring(t,e){const i=this.jumpSprings[t];i.spring&&this.Matter.World.remove(this.matter.world.localWorld,i.spring);const s=i.getSegments(),n=this.calculateStiffness(e);i.spring=this.createJumpSegment(s.from,s.to,i.length,n),this.Matter.World.add(this.matter.world.localWorld,i.spring),i.isGroundAnchored=!1,i.groundBody=null,i.groundedSegment=null,this.showJumpTrajectory(t,s.to,s.from)}updateStickinessSystemSections(t){t.forEach(({section:e,stick:i,active:s})=>{s?this.activateStickiness(e.name):this.deactivateStickiness(e.name)})}checkDirectionalStickinessSection(t,e){if(!this.segments||!this.segmentCollisions||this.calculateStickMagnitude(e)<this.config.grab.activationThreshold)return!1;const s=this.normalizeStickDirection(e),{startIndex:n,endIndex:o}=this.getSegmentRange(t.segmentRange.start,t.segmentRange.end);for(let r=n;r<o&&r<this.segments.length;r++){const a=this.segmentCollisions[r];if(a&&a.isColliding&&a.surfaceBody&&a.surfaceBody.isStatic){const c={x:-a.surfaceNormal.x,y:-a.surfaceNormal.y};if(s.x*c.x+s.y*c.y>.5)return!0}}return!1}activateStickiness(t){if(!this.segments||!this.segmentCollisions||this.grabDisabled)return;const e=this.sections[t];if(this.hasIceInRange(e.segmentRange.start,e.segmentRange.end)){this.deactivateStickiness(t);return}const s=this.getTouchingSegments(e.segmentRange.start,e.segmentRange.end),n=this.stickyConstraints[t],o=n.map(r=>r.segmentIndex);s.forEach(r=>{const{index:a,segment:c,collision:h}=r;if(o.includes(a))return;const l={x:h.contactPoint.x-c.position.x,y:h.contactPoint.y-c.position.y},p={x:h.contactPoint.x-h.surfaceBody.position.x,y:h.contactPoint.y-h.surfaceBody.position.y},f=this.Matter.Constraint.create({bodyA:c,bodyB:h.surfaceBody,pointA:l,pointB:p,length:0,stiffness:this.config.grab.constraintStiffness,damping:this.config.grab.constraintDamping,render:{visible:this.config.showDebug,strokeStyle:e.name==="head"?"#ff6b6b":"#74b9ff",lineWidth:3}});this.Matter.World.add(this.matter.world.localWorld,f),n.push({constraint:f,segmentIndex:a,surfaceBody:h.surfaceBody}),this.createStickinessCircle(f,h.contactPoint)})}deactivateStickiness(t){this.stickyConstraints[t].forEach(i=>{this.Matter.World.remove(this.matter.world.localWorld,i.constraint),this.removeStickinessCircle(i.constraint)}),this.stickyConstraints[t]=[]}cleanupInvalidStickyConstraints(){["head","tail"].forEach(t=>{const e=this.stickyConstraints[t],i=[],s=t==="head"?this.config.swapControls?this.rightGrab>0:this.leftGrab>0:this.config.swapControls?this.leftGrab>0:this.rightGrab>0;e.forEach(n=>{const{constraint:o}=n;s?i.push(n):(this.Matter.World.remove(this.matter.world.localWorld,o),this.removeStickinessCircle(o))}),this.stickyConstraints[t]=i})}createStickinessCircle(t,e){const i=this.config.grab.visual,s=this.scene.add.graphics();s.setPosition(e.x,e.y),s.setDepth(100);const n=this.scene.tweens.add({targets:s,scaleX:i.pulseScale,scaleY:i.pulseScale,duration:i.pulseDuration/2,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"});return this.stickinessCircles.set(t,{graphics:s,animation:n}),this.drawStickinessCircle(s,i),s}drawStickinessCircle(t,e){t.clear(),t.fillStyle(e.circleColor,e.circleAlpha),t.lineStyle(e.strokeWidth,e.strokeColor,1),t.fillCircle(0,0,e.circleRadius),t.strokeCircle(0,0,e.circleRadius)}removeStickinessCircle(t){const e=this.stickinessCircles.get(t);if(e){const{graphics:i,animation:s}=e;s&&s.destroy(),i&&i.scene&&i.destroy(),this.stickinessCircles.delete(t)}}updateStickinessCirclePosition(t,e){const i=this.stickinessCircles.get(t);i&&i.graphics&&i.graphics.setPosition(e.x,e.y)}createGroundAnchoredSpring(t,e,i,s){const{segment:n,collision:o}=e,r={x:o.contactPoint.x-o.surfaceBody.position.x,y:o.contactPoint.y-o.surfaceBody.position.y};return{constraint:this.Matter.Constraint.create({bodyA:t,bodyB:o.surfaceBody,pointA:{x:0,y:0},pointB:r,length:i,stiffness:s,render:{visible:this.config.showDebug,strokeStyle:"#00FF00",lineWidth:3}}),isGroundAnchored:!0,groundBody:o.surfaceBody,groundedSegment:n}}resetState(){this.grabDisabled=!0,setTimeout(()=>{this.grabDisabled=!1},100),this.stickyConstraints&&Object.keys(this.stickyConstraints).forEach(t=>{this.stickyConstraints[t].forEach(i=>{this.Matter.World.remove(this.matter.world.localWorld,i.constraint),this.removeStickinessCircle(i.constraint)}),this.stickyConstraints[t]=[]}),this.jumpSprings&&Object.values(this.jumpSprings).forEach(t=>{t.spring&&(this.Matter.World.remove(this.matter.world.localWorld,t.spring),t.spring=null,t.attached=!1,t.isGroundAnchored=!1,t.groundBody=null,t.groundedSegment=null)}),this.anchors&&Object.values(this.anchors).forEach(t=>{if(t.body&&t.attachIndex<this.segments.length){const e=this.segments[t.attachIndex];this.Matter.Body.setPosition(t.body,{x:e.position.x,y:e.position.y}),this.Matter.Body.setVelocity(t.body,{x:0,y:0}),t.restPos.x=e.position.x,t.restPos.y=e.position.y,t.stickState={x:0,y:0}}}),this.processedInputs={leftStick:{x:0,y:0},rightStick:{x:0,y:0},leftTrigger:!1,rightTrigger:!1},this.segments&&this.segments.forEach(t=>{t.friction=this.config.segmentFriction,t.frictionStatic=this.config.segmentFrictionStatic})}}class at{constructor(t){this.scene=t,this.joystick=null,this.jumpButton=null,this.jumpText=null,this.menuButton=null,this.cursorKeys=null,this.isJumpPressed=!1,this.JOYSTICK_RADIUS=70,this.JUMP_BUTTON_RADIUS=48,this.EDGE_MARGIN=10,this.isTouchDevice()&&(this.createControls(),this.scene.scale.on("resize",()=>{this.updatePositions()}))}isTouchDevice(){return"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}createControls(){this.scene.load.plugin("rexvirtualjoystickplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexvirtualjoystickplugin.min.js",!0),this.scene.load.once("complete",()=>{this.setupControls()}),this.scene.load.start()}setupControls(){const t=this.scene.scale.width,e=this.scene.scale.height,i=8947848,s=13421772;this.joystick=this.scene.plugins.get("rexvirtualjoystickplugin").add(this.scene,{x:this.EDGE_MARGIN+this.JOYSTICK_RADIUS,y:e-this.JOYSTICK_RADIUS-this.EDGE_MARGIN,radius:this.JOYSTICK_RADIUS,base:this.scene.add.circle(0,0,this.JOYSTICK_RADIUS,i,.2).setStrokeStyle(3,16777215,.2),thumb:this.scene.add.circle(0,0,this.JOYSTICK_RADIUS*.5,s,.5).setStrokeStyle(2,16777215,.5),dir:"8dir",forceMin:16,enable:!0}),this.cursorKeys=this.joystick.createCursorKeys();const n=t-this.EDGE_MARGIN-this.JOYSTICK_RADIUS,o=e-this.JOYSTICK_RADIUS-this.EDGE_MARGIN;this.jumpButton=this.scene.add.circle(n,o,this.JUMP_BUTTON_RADIUS,i,.2).setStrokeStyle(3,16777215,.2).setInteractive().setScrollFactor(0).setDepth(1e3),this.jumpText=this.scene.add.text(n,o,"JUMP",{fontSize:"22px",color:"#cccccc",fontStyle:"bold"}).setOrigin(.5).setScrollFactor(0).setDepth(1001),this.jumpButton.on("pointerdown",()=>{this.isJumpPressed=!0,this.jumpButton.setScale(1.1).setAlpha(1),this.jumpText.setScale(1.1)}),this.jumpButton.on("pointerup",()=>{this.isJumpPressed=!1,this.jumpButton.setScale(1).setAlpha(.7),this.jumpText.setScale(1)}),this.jumpButton.on("pointerout",()=>{this.isJumpPressed=!1,this.jumpButton.setScale(1).setAlpha(.7),this.jumpText.setScale(1)}),this.menuButton=this.scene.add.text(t-60,60,"☰",{fontSize:"28px",color:"#ffffff",backgroundColor:"rgba(0, 0, 0, 0.7)",padding:{x:15,y:10}}).setOrigin(.5).setInteractive().setAlpha(.8).setScrollFactor(0).setDepth(1e3),this.menuButton.on("pointerdown",()=>{this.menuButton.setScale(1.1).setAlpha(1)}),this.menuButton.on("pointerup",()=>{this.menuButton.setScale(1).setAlpha(.8),this.scene.scene.start("MapSelectScene")}),this.joystick.base.setScrollFactor(0).setDepth(1e3),this.joystick.thumb.setScrollFactor(0).setDepth(1001)}updatePositions(){if(!this.joystick)return;const t=this.scene.scale.width,e=this.scene.scale.height;this.joystick.setPosition(this.EDGE_MARGIN+this.JOYSTICK_RADIUS,e-this.EDGE_MARGIN-this.JOYSTICK_RADIUS);const i=t-this.EDGE_MARGIN-this.JOYSTICK_RADIUS,s=e-this.EDGE_MARGIN-this.JOYSTICK_RADIUS;this.jumpButton.setPosition(i,s),this.jumpText&&this.jumpText.setPosition(i,s),this.menuButton.setPosition(t-60,60)}getLeftPressed(){return this.cursorKeys?this.cursorKeys.left.isDown:!1}getRightPressed(){return this.cursorKeys?this.cursorKeys.right.isDown:!1}getUpPressed(){return this.cursorKeys?this.cursorKeys.up.isDown:!1}getDownPressed(){return this.cursorKeys?this.cursorKeys.down.isDown:!1}getJumpPressed(){return this.isJumpPressed}getForce(){return this.joystick?this.joystick.force/this.joystick.radius:0}getAngle(){return this.joystick?this.joystick.angle:0}destroy(){this.joystick&&(this.joystick.base.destroy(),this.joystick.thumb.destroy(),this.joystick.destroy()),this.jumpButton&&this.jumpButton.destroy(),this.jumpText&&this.jumpText.destroy(),this.menuButton&&this.menuButton.destroy(),this.scene&&this.scene.scale&&this.scene.scale.off("resize")}}class ct{constructor(t,e,i,s={}){this.scene=t,this.x=e,this.y=i,this.options={showRecommendation:!0,showZoom:!1,fontSize:"14px",titleFontSize:"16px",backgroundColor:"rgba(0,0,0,0.8)",padding:{x:10,y:8},lineSpacing:4,...s},this.create()}create(){const t=[];if(this.options.showRecommendation){const o=this.scene.add.text(this.x,this.y,"🎮 Best played with a controller!",{fontSize:this.options.titleFontSize,color:"#ffd700",backgroundColor:"rgba(0,0,0,0.7)",padding:{x:10,y:5}}).setScrollFactor(0);t.push(o)}const e=["Controls:","─────────","WASD: Head control (Left stick)","↑←↓→: Tail control (Right stick)","Space/L2: Head jump","/ or R2: Tail jump"];this.options.showZoom&&e.push("Scroll: Zoom"),e.push("ESC: Menu");const i=e.join(`
`),s=this.options.showRecommendation?40:0,n=this.scene.add.text(this.x,this.y+s,i,{fontSize:this.options.fontSize,color:"#ffffff",backgroundColor:this.options.backgroundColor,padding:this.options.padding,lineSpacing:this.options.lineSpacing}).setScrollFactor(0);t.push(n),this.elements=t}destroy(){this.elements.forEach(t=>t.destroy())}setVisible(t){this.elements.forEach(e=>e.setVisible(t))}}class D{constructor(t,e,i,s,n,o={}){this.scene=t,this.matter=t.matter,this.Matter=g.Physics.Matter.Matter,this.config={color:6710886,friction:1,restitution:0,density:1,angle:0,strokeColor:null,strokeWidth:2,shape:"rectangle",...o},this.x=e,this.y=i,this.width=s,this.height=n,this.radius=this.width/2,this.create(),this.setupCollisionDetection()}create(){console.log(`PlatformBase.create() - ${this.constructor.name} at (${this.x}, ${this.y}) size: ${this.width}x${this.height} shape: ${this.config.shape} angle: ${this.config.angle}`),this.container=this.scene.add.container(this.x,this.y),this.config.shape==="circle"?this.graphics=this.scene.add.circle(0,0,this.radius,this.config.color):this.graphics=this.scene.add.rectangle(0,0,this.width,this.height,this.config.color),this.config.strokeColor!==null&&this.graphics.setStrokeStyle(this.config.strokeWidth,this.config.strokeColor),this.container.add(this.graphics),this.config.shape==="circle"?this.body=this.scene.matter.add.circle(this.x,this.y,this.radius,{isStatic:!0,friction:this.config.friction,restitution:this.config.restitution,density:this.config.density}):this.body=this.scene.matter.add.rectangle(this.x,this.y,this.width,this.height,{isStatic:!0,friction:this.config.friction,restitution:this.config.restitution,density:this.config.density}),this.config.angle!==0&&(this.scene.matter.body.setAngle(this.body,this.config.angle),console.log(`Applied rotation: ${this.config.angle} to physics body. Body angle now: ${this.body.angle}`)),this.syncVisualWithPhysics(),this.body.platformType=this.constructor.name,this.body.platformInstance=this}setupCollisionDetection(){}onCollision(t,e){}onCollisionEnd(t){}update(t){this.syncVisualWithPhysics()}syncVisualWithPhysics(){if(this.container&&this.body){this.container.setPosition(this.body.position.x,this.body.position.y),this.container.setRotation(this.body.angle);const t=Math.abs(this.body.position.x-this.container.x)+Math.abs(this.body.position.y-this.container.y);Math.abs(this.body.angle)>.01||t>1}}getPosition(){return{x:this.body.position.x,y:this.body.position.y}}setPosition(t,e){console.log(`PlatformBase.setPosition(${t}, ${e}) called`),this.scene.matter.body.setPosition(this.body,{x:t,y:e}),console.log(`Physics body now at: (${this.body.position.x}, ${this.body.position.y})`),this.syncVisualWithPhysics()}setAngle(t){this.scene.matter.body.setAngle(this.body,t),this.config.angle=t,this.syncVisualWithPhysics()}destroy(){this.container?this.container.destroy():this.graphics&&this.graphics.destroy(),this.body&&this.scene.matter&&this.scene.matter.world&&this.scene.matter.world.remove(this.body)}}class ht extends D{constructor(t,e,i,s,n,o={}){const r={color:11789820,strokeColor:8508666,strokeWidth:3,friction:1e-5,restitution:.05,...o};super(t,e,i,s,n,r),this.body&&(this.body.isIcePlatform=!0),this.slipForce=o.slipForce||8e-5,this.meltTime=o.meltTime||0,this.timeOnIce=0,this.segmentsOnIce=new Map,this.iceFriction=o.iceFriction||.001,this.createIceEffects()}createIceEffects(){const t=this.scene.add.graphics();t.lineStyle(1,14808574,.6);const e=Math.floor(this.width*this.height/1e3);for(let i=0;i<e;i++){const s=(Math.random()-.5)*this.width*.8,n=(Math.random()-.5)*this.height*.8,o=Math.random()*8+2;t.moveTo(s,n-o),t.lineTo(s,n+o),t.moveTo(s-o*.866,n-o*.5),t.lineTo(s+o*.866,n+o*.5),t.moveTo(s-o*.866,n+o*.5),t.lineTo(s+o*.866,n-o*.5)}t.strokePath(),this.container?this.container.add(t):(t.setPosition(this.x,this.y),t.setAngle(this.config.angle)),this.crystalOverlay=t}onCollision(t,e){this.segmentsOnIce.has(t)||(this.segmentsOnIce.set(t,{originalFriction:t.friction,originalFrictionStatic:t.frictionStatic}),t.friction=this.iceFriction,t.frictionStatic=this.iceFriction);const i=e.normal;-i.y,i.x;const s=t.velocity,n=Math.sqrt(s.x*s.x+s.y*s.y);if(n>5e-4){const o={x:s.x/n,y:s.y/n};this.scene.matter.body.applyForce(t,t.position,{x:o.x*this.slipForce,y:o.y*this.slipForce})}if(Math.abs(t.angularVelocity)>.1&&this.scene.matter.body.setAngularVelocity(t,t.angularVelocity*.7),Math.random()<.3){const o={x:(Math.random()-.5)*this.slipForce*.5,y:(Math.random()-.5)*this.slipForce*.3};this.scene.matter.body.applyForce(t,t.position,o)}}onCollisionEnd(t,e){const i=this.segmentsOnIce.get(t);i&&(t.friction=i.originalFriction,t.frictionStatic=i.originalFrictionStatic,this.segmentsOnIce.delete(t))}update(t){if(super.update(t),this.meltTime>0)if(this.timeOnIce+=t,this.timeOnIce>=this.meltTime)this.melt();else{const i=1-this.timeOnIce/this.meltTime*.3;this.graphics.setAlpha(i),this.crystalOverlay&&this.crystalOverlay.setAlpha(i*.6)}}melt(){try{const t=this.scene.add.particles(this.x,this.y,"__DEFAULT",{scale:{start:.3,end:0},speed:{min:20,max:50},lifespan:500,tint:8508666,quantity:20});this.scene.time.delayedCall(200,()=>{t.destroy(),this.destroy()})}catch{this.scene.tweens.add({targets:[this.graphics,this.crystalOverlay],alpha:0,duration:500,onComplete:()=>this.destroy()})}}destroy(){this.segmentsOnIce&&(this.segmentsOnIce.forEach((t,e)=>{e&&e.friction!==void 0&&(e.friction=t.originalFriction,e.frictionStatic=t.originalFrictionStatic)}),this.segmentsOnIce.clear()),this.crystalOverlay&&!this.container&&(this.crystalOverlay.destroy(),this.crystalOverlay=null),super.destroy()}}class lt extends D{constructor(t,e,i,s,n,o={}){const r={color:16750592,strokeColor:16088064,strokeWidth:4,friction:.8,restitution:2,...o};super(t,e,i,s,n,r),this.bounceForce=o.bounceForce||.1,this.minimumImpactSpeed=o.minimumImpactSpeed||.5,this.bounceSound=o.bounceSound||null,this.baseScaleX=1,this.baseScaleY=1,this.squishAmount=.1,this.squishDuration=150,this.createBouncyEffects()}createBouncyEffects(){const t=this.scene.add.graphics();t.lineStyle(2,16774112,.8);const e=Math.floor(this.width/20),i=this.height*.6,s=this.width/e;for(let n=0;n<e;n++){const o=(n-e/2+.5)*s,r=0;t.moveTo(o-s/4,r-i/2);for(let a=0;a<6;a++){const c=a/5,h=r-i/2+c*i,l=o+(a%2===0?-s/4:s/4);t.lineTo(l,h)}}t.strokePath(),t.setPosition(this.x,this.y),t.setAngle(this.config.angle),this.springOverlay=t}onCollision(t,e){const i=t.velocity,s=e.normal,n=Math.abs(i.x*s.x+i.y*s.y);if(console.log(`BouncyPlatform collision: impactSpeed=${n.toFixed(3)}, normal=(${s.x.toFixed(2)}, ${s.y.toFixed(2)})`),n>=this.minimumImpactSpeed){const o=Math.max(1,n*.5),r={x:-s.x*this.bounceForce*o,y:-s.y*this.bounceForce*o};console.log(`Applying bounce force: (${r.x.toFixed(4)}, ${r.y.toFixed(4)})`),this.scene.matter.body.applyForce(t,t.position,r),this.triggerBounceAnimation(),this.bounceSound&&this.scene.sound&&this.scene.sound.play(this.bounceSound,{volume:Math.min(n/10,1)})}else console.log(`Impact too slow for bounce (${n.toFixed(3)} < ${this.minimumImpactSpeed})`)}triggerBounceAnimation(){this.bounceTween&&this.bounceTween.stop(),this.bounceTween=this.scene.tweens.add({targets:[this.graphics,this.springOverlay],scaleX:this.baseScaleX+this.squishAmount,scaleY:this.baseScaleY-this.squishAmount,duration:this.squishDuration/2,ease:"Power2",yoyo:!0,onComplete:()=>{this.bounceTween=null}});const t=this.graphics.fillColor;this.graphics.setFillStyle(16771899),this.scene.time.delayedCall(100,()=>{this.graphics&&this.graphics.setFillStyle(t)})}update(t){if(super.update(t),!this.bounceTween){const e=this.scene.time.now*.002,i=Math.sin(e)*.02+1;this.graphics.setScale(i,1/i),this.springOverlay&&this.springOverlay.setScale(i,1/i)}}destroy(){this.bounceTween&&(this.bounceTween.stop(),this.bounceTween=null),this.springOverlay&&(this.springOverlay.destroy(),this.springOverlay=null),super.destroy()}}class dt extends D{constructor(t,e,i,s,n,o={}){const r={color:10233776,strokeColor:8069026,strokeWidth:3,friction:.6,restitution:.2,...o};super(t,e,i,s,n,r),this.shockForce=o.shockForce||.005,this.shockRadius=o.shockRadius||100,this.shockDuration=o.shockDuration||200,this.rechargeDuration=o.rechargeDuration||1e3,this.isCharged=!0,this.lastShockTime=0,this.electricArcs=[],this.createElectricEffects(),this.setupElectricalActivity()}createElectricEffects(){this.electricField=this.scene.add.graphics(),this.electricField.setPosition(this.x,this.y),this.electricField.setAngle(this.config.angle),this.electricField.setDepth(-1);try{this.sparkEmitter=this.scene.add.particles(this.x,this.y,"__DEFAULT",{scale:{start:.1,end:0},speed:{min:50,max:150},lifespan:{min:100,max:300},tint:[15277667,10233776,4149685,48340],quantity:1,frequency:200,emitZone:{type:"edge",source:new Phaser.Geom.Rectangle(-this.width/2,-this.height/2,this.width,this.height),quantity:1}})}catch{this.sparkEmitter=null}this.updateElectricVisuals()}setupElectricalActivity(){this.electricTimer=this.scene.time.addEvent({delay:2e3+Math.random()*3e3,callback:this.createElectricPulse,callbackScope:this,loop:!0})}createElectricPulse(){if(!this.isCharged)return;const t=this.scene.add.graphics();t.lineStyle(2,15277667,.8);const e=8,i=this.width/e;let s=this.x-this.width/2,n=this.y;t.moveTo(s,n);for(let o=1;o<=e;o++){const r=this.x-this.width/2+o*i,a=n+(Math.random()-.5)*this.height*.3;t.lineTo(r,a),n=a}t.strokePath(),this.scene.tweens.add({targets:t,alpha:0,duration:200,onComplete:()=>t.destroy()})}updateElectricVisuals(){if(this.electricField)if(this.electricField.clear(),this.isCharged){this.electricField.lineStyle(1,10233776,.3);const t=6;for(let s=0;s<t;s++){const n=s/t*Math.PI*2,o=Math.max(this.width,this.height)/2,r=this.shockRadius,a=Math.cos(n)*o,c=Math.sin(n)*o,h=Math.cos(n)*r,l=Math.sin(n)*r;this.electricField.moveTo(a,c),this.electricField.lineTo(h,l)}this.electricField.strokePath();const e=this.scene.time.now*.005,i=Math.sin(e)*.2+.5;this.electricField.setAlpha(i)}else this.electricField.setAlpha(.1)}onCollision(t,e){if(!this.isCharged)return;const i=this.scene.time.now;i-this.lastShockTime<this.rechargeDuration||(this.triggerShockEffect(),this.scene.resetWorm&&typeof this.scene.resetWorm=="function"&&this.scene.resetWorm(),this.isCharged=!1,this.lastShockTime=i,this.scene.time.delayedCall(this.rechargeDuration,()=>{this.isCharged=!0}))}applyElectricShock(t){const e=Math.random()*Math.PI*2,i={x:Math.cos(e)*this.shockForce,y:Math.sin(e)*this.shockForce};this.scene.matter.body.applyForce(t,t.position,i);const s={x:(Math.random()-.5)*this.shockForce*2,y:(Math.random()-.5)*this.shockForce*2};this.scene.matter.body.applyForce(t,t.position,s)}triggerShockEffect(){const t=this.graphics.fillColor;this.graphics.setFillStyle(16771899),this.scene.time.delayedCall(100,()=>{this.graphics&&this.graphics.setFillStyle(t)}),this.sparkEmitter&&this.sparkEmitter.explode(20),this.scene.cameras&&this.scene.cameras.main&&this.scene.cameras.main.shake(this.shockDuration,.01)}update(t){super.update(t),this.updateElectricVisuals()}destroy(){this.electricTimer&&(this.electricTimer.destroy(),this.electricTimer=null),this.electricField&&(this.electricField.destroy(),this.electricField=null),this.sparkEmitter&&(this.sparkEmitter.destroy(),this.sparkEmitter=null),super.destroy()}}class ut extends D{constructor(t,e,i,s,n,o={}){const r={color:16007990,strokeColor:13840175,strokeWidth:3,friction:.9,restitution:.1,...o};super(t,e,i,s,n,r),this.burnForce=o.burnForce||.002,this.burnDamage=o.burnDamage||.1,this.heatRadius=o.heatRadius||80,this.burnDuration=o.burnDuration||2e3,this.coolingRate=o.coolingRate||.001,this.burningSegments=new Set,this.burnTimers=new Map,this.fireIntensity=1,this.baseIntensity=1,this.createFireEffects(),this.setupFireAnimation()}createFireEffects(){try{this.flameEmitter=this.scene.add.particles(this.x,this.y-this.height/2,"__DEFAULT",{scale:{start:.3,end:0},speed:{min:20,max:60},lifespan:{min:300,max:800},tint:[16733986,16750592,16761095,16007990],alpha:{start:.8,end:0},gravityY:-100,quantity:2,frequency:100,emitZone:{type:"edge",source:new Phaser.Geom.Rectangle(-this.width/2,-5,this.width,10),quantity:1}})}catch{this.flameEmitter=null}this.heatField=this.scene.add.graphics(),this.heatField.setPosition(this.x,this.y),this.heatField.setAngle(this.config.angle),this.heatField.setDepth(-1);try{this.smokeEmitter=this.scene.add.particles(this.x,this.y-this.height/2-20,"__DEFAULT",{scale:{start:.2,end:.6},speed:{min:10,max:30},lifespan:{min:1e3,max:2e3},tint:[4342338,6381921,7697781],alpha:{start:.6,end:0},gravityY:-50,quantity:1,frequency:300,emitZone:{type:"random",source:new Phaser.Geom.Rectangle(-this.width/4,-10,this.width/2,20)}})}catch{this.smokeEmitter=null}this.updateFireVisuals()}setupFireAnimation(){this.fireTimer=this.scene.time.addEvent({delay:100,callback:()=>{this.fireIntensity=this.baseIntensity+(Math.random()-.5)*.3,this.fireIntensity=Math.max(.1,Math.min(1,this.fireIntensity)),this.updateFireVisuals()},callbackScope:this,loop:!0})}updateFireVisuals(){if(!this.heatField)return;this.heatField.clear(),this.heatField.lineStyle(1,16750592,.2*this.fireIntensity);const t=5,e=this.scene.time.now*.01;for(let n=0;n<t;n++){const o=(n-t/2)*(this.height/t),r=10*this.fireIntensity;this.heatField.moveTo(-this.heatRadius,o);for(let a=-this.heatRadius;a<=this.heatRadius;a+=5){const c=Math.sin((a+e)*.1)*r;this.heatField.lineTo(a,o+c)}}this.heatField.strokePath(),this.flameEmitter&&(this.flameEmitter.setFrequency(100/this.fireIntensity),this.flameEmitter.setScale(.3*this.fireIntensity,0));const i=Math.floor(this.fireIntensity*255),s=i<<16|Math.floor(i*.3)<<8|Math.floor(i*.2);this.graphics.setFillStyle(s)}onCollision(t,e){this.burningSegments.has(t)||this.startBurning(t)}onCollisionEnd(t){}startBurning(t){this.burningSegments.add(t),this.scene.matter.body.applyForce(t,t.position,{x:(Math.random()-.5)*this.burnForce,y:-this.burnForce*2}),this.createBurnEffect(t);const e=this.scene.time.addEvent({delay:50,callback:()=>this.applyBurnDamage(t),callbackScope:this,repeat:Math.floor(this.burnDuration/50)});this.burnTimers.set(t,e),this.scene.time.delayedCall(this.burnDuration,()=>{this.stopBurning(t)})}createBurnEffect(t){let e=null;try{e=this.scene.add.particles(t.position.x,t.position.y,"__DEFAULT",{scale:{start:.1,end:0},speed:{min:10,max:30},lifespan:{min:200,max:500},tint:[16733986,16750592,16761095],alpha:{start:.8,end:0},gravityY:-50,quantity:1,frequency:150})}catch{e=null}t.burnEffect=e;const i=()=>{e&&t.position&&e.setPosition(t.position.x,t.position.y)};t.burnUpdate=i}applyBurnDamage(t){if(!this.burningSegments.has(t))return;const e={x:(Math.random()-.5)*this.burnForce*.5,y:-this.burnForce*.5};this.scene.matter.body.applyForce(t,t.position,e),t.burnUpdate&&t.burnUpdate()}stopBurning(t){this.burningSegments.delete(t);const e=this.burnTimers.get(t);e&&(e.destroy(),this.burnTimers.delete(t)),t.burnEffect&&(t.burnEffect.destroy(),delete t.burnEffect),t.burnUpdate&&delete t.burnUpdate}extinguish(){if(this.baseIntensity=Math.max(0,this.baseIntensity-this.coolingRate),this.baseIntensity<=0){this.flameEmitter&&this.flameEmitter.stop();for(const t of this.burningSegments)this.stopBurning(t)}}reignite(){this.baseIntensity=1,this.flameEmitter&&this.flameEmitter.start()}update(t){super.update(t),this.baseIntensity>.3&&(this.baseIntensity-=this.coolingRate*t*.001)}destroy(){for(const t of this.burningSegments)this.stopBurning(t);this.fireTimer&&(this.fireTimer.destroy(),this.fireTimer=null),this.flameEmitter&&(this.flameEmitter.destroy(),this.flameEmitter=null),this.smokeEmitter&&(this.smokeEmitter.destroy(),this.smokeEmitter=null),this.heatField&&(this.heatField.destroy(),this.heatField=null),super.destroy()}}class B extends et{constructor(t={}){var e;super(t),this.CHAR_WIDTH=t.charWidth||96,this.CHAR_HEIGHT=t.charHeight||48,this.ROW_SPACING=t.rowSpacing||96,this.mapData=t.mapData||this.getDefaultMapData(),this.sceneTitle=t.title||((e=this.mapData.metadata)==null?void 0:e.name)||"JSON Level",this.returnScene=t.returnScene||"MapSelectScene",this.victoryAchieved=!1,this.platforms=[],this.platformColors=t.platformColors||[16739179,5164484,9822675,16697943,10656766],this.miniMapConfig={width:200,height:200,padding:20,visible:!0},this.minimap=null,this.minimapIgnoreList=[],this.buttonMWasPressed=!1,this.button0WasPressed=!1,this.button1WasPressed=!1}getDefaultMapData(){return{metadata:{name:"Default Level",difficulty:1,description:"A basic test level"},dimensions:{width:800,height:600},entities:{wormStart:{x:2,y:1},goal:{x:14,y:6}},platforms:[{id:"ground",type:"rectangle",x:0,y:0,width:16,height:1,color:"#ff6b6b",physics:{friction:.8,frictionStatic:1,restitution:0}}]}}cleanup(){super.cleanup(),this.platforms.forEach(t=>{t.isSpecial&&t.instance&&t.instance.destroy&&t.instance.destroy()}),this.platforms=[],this.minimapIgnoreList=[],this.mouseConstraint&&(this.matter.world.removeConstraint(this.mouseConstraint),this.mouseConstraint=null)}create(){super.create(),this.matter.world.drawDebug=!1;const t=this.mapData.dimensions.width,e=this.mapData.dimensions.height;this.levelHeight=e,this.levelWidth=t,this.LEVEL_WIDTH=t,this.updateMiniMapSize(),this.matter.world.setBounds(0,0,t,e,1e3),this.createGrid(e),this.createBoundaryWalls(e),this.loadMapFromJSON(),this.createMiniMap(e),this.createUI(),this.setupControls()}loadMapFromJSON(){const{platforms:t,entities:e}=this.mapData;t.forEach(i=>{this.createPlatformFromJSON(i)}),this.createEntitiesFromJSON(e)}createPlatformFromJSON(t){const{type:e,platformType:i="standard",physics:s={},color:n,id:o}=t;if(i&&i!=="standard"){const l=this.createSpecialPlatform(t);if(l){this.platforms.push({instance:l,data:t,id:o||`platform_${this.platforms.length}`,isSpecial:!0});return}}let r,a;switch(e){case"rectangle":({body:r,visual:a}=this.createRectanglePlatform(t));break;case"circle":({body:r,visual:a}=this.createCirclePlatform(t));break;case"polygon":({body:r,visual:a}=this.createPolygonPlatform(t));break;case"trapezoid":({body:r,visual:a}=this.createTrapezoidPlatform(t));break;case"custom":({body:r,visual:a}=this.createCustomPlatform(t));break;default:console.warn(`Unknown platform type: ${e}`);return}const h={...{isStatic:!0,friction:.8,frictionStatic:1,restitution:0},...s};Object.keys(h).forEach(l=>{l!=="isStatic"&&this.matter.body.set(r,l,h[l])}),this.platforms.push({body:r,visual:a,data:t,id:o||`platform_${this.platforms.length}`})}createSpecialPlatform(t){const{type:e,platformType:i,x:s,y:n,width:o,height:r,radius:a,physics:c={},color:h}=t,l=s,p=n,f={color:parseInt((h||"#ff6b6b").replace("#","0x")),shape:e,...c};let d,u;switch(e==="rectangle"?(d=o,u=r):e==="circle"?(d=a*2,u=a*2):(d=o||a*2||100,u=r||a*2||100),console.log(`Creating special platform ${i} ${e} at (${l}, ${p}) size: ${d}x${u}`),console.log(`Level bounds: ${this.levelWidth}x${this.levelHeight}`),i){case"ice":return new ht(this,l,p,d,u,f);case"bouncy":return new lt(this,l,p,d,u,f);case"electric":return new dt(this,l,p,d,u,f);case"fire":return new ut(this,l,p,d,u,f);default:return console.warn(`Unknown special platform type: ${i}`),null}}setupSpecialPlatformCollisions(){this.matter.world.on("collisionstart",t=>{t.pairs.forEach(e=>{const{bodyA:i,bodyB:s}=e,n=this.isWormSegment(i)?i:this.isWormSegment(s)?s:null,o=n===i?s:i;if(n&&o.platformInstance){const r=o.platformInstance;r.onCollision&&r.onCollision(n,e.collision)}})}),this.matter.world.on("collisionend",t=>{t.pairs.forEach(e=>{const{bodyA:i,bodyB:s}=e,n=this.isWormSegment(i)?i:this.isWormSegment(s)?s:null,o=n===i?s:i;if(n&&o.platformInstance){const r=o.platformInstance;r.onCollisionEnd&&r.onCollisionEnd(n)}})})}isWormSegment(t){return this.worm&&this.worm.segments&&this.worm.segments.includes(t)}createRectanglePlatform(t){const{x:e,y:i,width:s,height:n,color:o="#ff6b6b"}=t,r=e,a=i,c=s,h=n,l=this.matter.add.rectangle(r,a,c,h,{isStatic:!0}),p=this.add.rectangle(r,a,c,h,parseInt(o.replace("#","0x")));return{body:l,visual:p}}createCirclePlatform(t){const{x:e,y:i,radius:s,color:n="#4ecdc4"}=t,o=e,r=i,a=s,c=this.matter.add.circle(o,r,a,{isStatic:!0}),h=this.add.circle(o,r,a,parseInt(n.replace("#","0x")));return{body:c,visual:h}}createPolygonPlatform(t){const{x:e,y:i,sides:s,radius:n,rotation:o=0,color:r="#95e1d3"}=t,a=e,c=i,h=n,l=[];for(let d=0;d<s;d++){const u=2*Math.PI*d/s+o;l.push({x:a+h*Math.cos(u),y:c+h*Math.sin(u)})}const p=this.matter.add.fromVertices(a,c,l,{isStatic:!0}),f=this.add.polygon(a,c,l,parseInt(r.replace("#","0x")));return{body:p,visual:f}}createTrapezoidPlatform(t){const{x:e,y:i,width:s,height:n,slope:o=0,color:r="#feca57"}=t,a=e,c=i,h=s,l=n,p=h/2,f=l/2,d=o*f,u=[{x:a-p+d,y:c-f},{x:a+p-d,y:c-f},{x:a+p,y:c+f},{x:a-p,y:c+f}],m=this.matter.add.fromVertices(a,c,u,{isStatic:!0}),y=this.add.polygon(a,c,u,parseInt(r.replace("#","0x")));return{body:m,visual:y}}createCustomPlatform(t){const{vertices:e,color:i="#a29bfe"}=t,s=e,n=s.reduce((c,h)=>c+h.x,0)/s.length,o=s.reduce((c,h)=>c+h.y,0)/s.length,r=this.matter.add.fromVertices(n,o,s,{isStatic:!0}),a=this.add.polygon(n,o,s,parseInt(i.replace("#","0x")));return{body:r,visual:a}}createEntitiesFromJSON(t){const{wormStart:e,goal:i}=t,s=e.x,n=e.y;this.wormStartPosition={x:s,y:n},this.worm=new rt(this,s,n,{baseRadius:15,segmentSizes:[.75,1,1,.95,.9,.8,.8,.8,.8,.8,.8,.8],showDebug:!1}),this.cameraTarget=this.add.rectangle(s,n,10,10,16711680,0);const o=i.x,r=i.y;this.goal=this.add.star(o,r,5,15,25,16766720),this.add.star(o,r,5,10,20,16772430).setDepth(1),this.tweens.add({targets:this.goal,rotation:Math.PI*2,duration:3e3,repeat:-1}),this.cameras.main.setBounds(0,0,this.levelWidth,this.levelHeight),this.handleResize(),this.scale.on("resize",this.handleResize,this),this.setupSpecialPlatformCollisions()}updateMiniMapSize(){const t=this.levelWidth/this.levelHeight,e=150,i=250,s=80;let n,o;t>1?(n=Math.min(e,s*Math.sqrt(t*2)),o=n/t):(o=Math.min(i,s*Math.sqrt(2/t)),n=o*t),this.miniMapConfig.width=Math.max(s,n),this.miniMapConfig.height=Math.max(s,o)}createGrid(t){const e=this.add.graphics();e.lineStyle(1,8947848,.5);for(let i=0;i<=this.levelWidth;i+=this.CHAR_WIDTH)e.moveTo(i,0),e.lineTo(i,t);for(let i=0;i*this.CHAR_WIDTH<=t;i++){const s=t-i*this.CHAR_WIDTH;e.moveTo(0,s),e.lineTo(this.levelWidth,s)}e.strokePath(),e.setDepth(-100),this.minimapIgnoreList.push(e);for(let i=0;i<=t;i+=this.CHAR_WIDTH){const s=Math.round(i/this.CHAR_WIDTH);if(s%5===0&&s>0){const n=this.add.text(10,t-i-10,`${s}`,{fontSize:"16px",color:"#4ecdc4",backgroundColor:"rgba(0,0,0,0.8)",padding:{x:5,y:2}}),o=this.add.text(this.levelWidth-40,t-i-10,`${s}`,{fontSize:"16px",color:"#4ecdc4",backgroundColor:"rgba(0,0,0,0.8)",padding:{x:5,y:2}}),r=this.add.graphics();r.lineStyle(2,5164484,.6),r.moveTo(0,t-i),r.lineTo(this.levelWidth,t-i),r.strokePath(),r.setDepth(-50),this.minimapIgnoreList.push(n,o,r)}}}createBoundaryWalls(t){const s=this.add.graphics();s.fillStyle(2899536,.8),s.lineStyle(3,3426654,1),s.fillRect(-150,0,150,t),s.strokeRect(-150,0,150,t),s.fillRect(this.levelWidth,0,150,t),s.strokeRect(this.levelWidth,0,150,t),s.fillRect(0,-150,this.levelWidth,150),s.strokeRect(0,-150,this.levelWidth,150),s.fillRect(0,t,this.levelWidth,150),s.strokeRect(0,t,this.levelWidth,150),s.lineStyle(4,15158332,.8),s.strokeRect(0,0,this.levelWidth,t),this.matter.add.rectangle(-150/2,t/2,150,t,{isStatic:!0}),this.matter.add.rectangle(this.levelWidth+150/2,t/2,150,t,{isStatic:!0});const n=this.levelWidth*2;this.matter.add.rectangle(this.levelWidth/2,-150/2,n,150,{isStatic:!0}),this.matter.add.rectangle(this.levelWidth/2,t+150/2,n,150,{isStatic:!0})}setupControls(){this.cursors=this.input.keyboard.createCursorKeys(),this.spaceKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.SPACE),this.escKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.ESC),this.mKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.M),this.shiftKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.SHIFT),this.wasd=this.input.keyboard.addKeys("W,S,A,D"),this.virtualControls=new at(this),this.button0WasPressed=!1}createUI(){const t=this.add.text(20,20,this.sceneTitle,{fontSize:"24px",color:"#ffffff",backgroundColor:"rgba(0,0,0,0.7)",padding:{x:10,y:5}}).setScrollFactor(0);this.minimapIgnoreList.push(t),"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0||(this.controlsDisplay=new ct(this,20,60),this.minimapIgnoreList.push(this.controlsDisplay.elements))}createMiniMap(t){const i=this.scale.width-this.miniMapConfig.width-this.miniMapConfig.padding,s=this.miniMapConfig.padding;this.minimap=this.cameras.add(i,s,this.miniMapConfig.width,this.miniMapConfig.height),this.minimap.setBounds(0,0,this.levelWidth,t);const n=this.miniMapConfig.width/this.levelWidth,o=this.miniMapConfig.height/t,r=Math.min(n,o)*.9;this.minimap.setZoom(r),this.minimap.setBackgroundColor(2899536),this.minimap.centerOn(this.levelWidth/2,t/2),this.minimap.setName("minimap"),this.minimapIgnoreList.forEach(a=>{this.minimap.ignore(a)}),this.controlsDisplay&&this.controlsDisplay.elements&&this.minimap.ignore(this.controlsDisplay.elements),this.minimapIgnoreList=[],this.createMiniMapBorder(i,s),this.createViewportIndicator()}createMiniMapBorder(t,e){this.miniMapBorder=this.add.graphics(),this.miniMapBorder.lineStyle(2,3426654,1),this.miniMapBorder.strokeRect(t,e,this.miniMapConfig.width,this.miniMapConfig.height),this.miniMapBorder.setScrollFactor(0),this.miniMapBorder.setDepth(1001),this.miniMapLabel=this.add.text(t+5,e-20,"Map (M)",{fontSize:"12px",color:"#4ecdc4",backgroundColor:"rgba(0,0,0,0.8)",padding:{x:4,y:2}}).setScrollFactor(0).setDepth(1001),this.minimap&&(this.minimap.ignore(this.miniMapBorder),this.minimap.ignore(this.miniMapLabel))}createViewportIndicator(){this.viewportIndicator=this.add.rectangle(0,0,this.cameras.main.width,this.cameras.main.height,5164484),this.viewportIndicator.setStrokeStyle(5,5164484,.8),this.viewportIndicator.setFillStyle(5164484,.1),this.viewportIndicator.setDepth(100),this.cameras.main.ignore(this.viewportIndicator)}handleResize(){const t=this.scale.width;if(this.cameras&&this.cameras.main&&this.cameraTarget&&(this.cameras.main.startFollow(this.cameraTarget,!0),this.cameras.main.setZoom(1),this.cameras.main.setDeadzone(100,100)),this.minimap){const e=t-this.miniMapConfig.width-this.miniMapConfig.padding,i=this.miniMapConfig.padding;this.minimap.setPosition(e,i),this.updateMiniMapBorder(e,i),this.updateViewportIndicator()}}updateMiniMapBorder(t,e){this.miniMapBorder&&(this.miniMapBorder.clear(),this.miniMapBorder.lineStyle(2,3426654,1),this.miniMapBorder.strokeRect(t,e,this.miniMapConfig.width,this.miniMapConfig.height)),this.miniMapLabel&&this.miniMapLabel.setPosition(t+5,e-20)}updateViewportIndicator(){if(!this.viewportIndicator||!this.minimap||!this.miniMapConfig.visible)return;const t=this.cameras.main;if(!t||!t.width||!t.height||!t.zoom)return;const e=this.minimap.zoom,i=t.width/t.zoom,s=t.height/t.zoom;if(!t.worldView)return;const n=t.worldView.centerX,o=t.worldView.centerY;this.viewportIndicator.setPosition(n,o);const r=i*e/50,a=s*e/30;this.viewportIndicator.setScale(r,a)}update(t,e){if(this.victoryAchieved){const s=this.input.gamepad.getPad(0);if(this.hasNextLevel&&g.Input.Keyboard.JustDown(this.spaceKey)){this.scene.start(this.nextMapKey);return}if(g.Input.Keyboard.JustDown(this.escKey)){this.scene.stop(),this.scene.start("MapSelectScene");return}if(s&&s.buttons[0]&&s.buttons[0].pressed&&!this.button0WasPressed){this.hasNextLevel?this.scene.start(this.nextMapKey):(this.scene.stop(),this.scene.start("MapSelectScene"));return}if(s&&s.buttons[1]&&s.buttons[1].pressed&&!this.button1WasPressed){this.scene.stop(),this.scene.start("MapSelectScene");return}this.button0WasPressed=s&&s.buttons[0]&&s.buttons[0].pressed,this.button1WasPressed=s&&s.buttons[1]&&s.buttons[1].pressed;return}if(g.Input.Keyboard.JustDown(this.escKey)){this.scene.start(this.returnScene);return}this.worm.update(e),this.platforms.forEach(s=>{s.isSpecial&&s.instance&&s.instance.update&&s.instance.update(e)}),g.Input.Keyboard.JustDown(this.mKey)&&this.toggleMiniMap();const i=this.input.gamepad.getPad(0);if(i&&i.buttons[2]&&i.buttons[2].pressed&&!this.buttonMWasPressed&&this.toggleMiniMap(),this.buttonMWasPressed=i&&i.buttons[2]&&i.buttons[2].pressed,this.cameraTarget&&this.worm){const s=this.worm.getHead(),n=this.worm.getTail();s&&n&&(this.cameraTarget.x=(s.position.x+n.position.x)/2,this.cameraTarget.y=(s.position.y+n.position.y)/2)}if(this.minimap&&this.worm&&this.miniMapConfig.visible){const s=this.worm.getHead();s&&this.minimap.centerOn(s.position.x,s.position.y),this.updateViewportIndicator()}if(this.goal&&this.worm&&this.worm.segments)for(let s=0;s<this.worm.segments.length;s++){const n=this.worm.segments[s],o=g.Math.Distance.Between(n.position.x,n.position.y,this.goal.x,this.goal.y),c=(this.worm.segmentRadii[s]||15)+20;if(o<c){this.victory();return}}}victory(){super.victory();const t=gt(),e=t.indexOf(this.scene.key),i=e!==-1&&e<t.length-1,s=i?t[e+1]:null,n=this.add.rectangle(this.scale.width/2,this.scale.height/2,this.scale.width,this.scale.height,0,.8);n.setScrollFactor(0),n.setDepth(1e3);const o=this.add.rectangle(this.scale.width/2,this.scale.height/2,500,350,2899536,.95);o.setScrollFactor(0),o.setDepth(1001),o.setStrokeStyle(4,5164484,1);const r=this.add.text(this.scale.width/2,this.scale.height/2-120,"LEVEL COMPLETE!",{fontSize:"48px",color:"#ffd700",stroke:"#000000",strokeThickness:6}).setOrigin(.5).setScrollFactor(0).setDepth(1002),a=this.add.text(this.scale.width/2,this.scale.height/2-60,"Well done!",{fontSize:"24px",color:"#ffffff"}).setOrigin(.5).setScrollFactor(0).setDepth(1002),c=this.scale.height/2+20,h=160,l=50,p=40;if(i){const d=this.scale.width/2-h/2-p/2,u=this.scale.width/2+h/2+p/2,m=this.add.rectangle(d,c,h,l,3447003);m.setScrollFactor(0).setDepth(1002),m.setStrokeStyle(2,5164484,1),m.setInteractive(),this.add.text(d,c,"Return to Menu",{fontSize:"18px",color:"#ffffff",fontStyle:"bold"}).setOrigin(.5).setScrollFactor(0).setDepth(1003);const y=this.add.rectangle(u,c,h,l,2600544);y.setScrollFactor(0).setDepth(1002),y.setStrokeStyle(4,3066993,1),y.setInteractive(),this.add.text(u,c,"Next",{fontSize:"20px",color:"#ffffff",fontStyle:"bold"}).setOrigin(.5).setScrollFactor(0).setDepth(1003),m.on("pointerdown",()=>{this.scene.stop(),this.scene.start("MapSelectScene")}),m.on("pointerover",()=>{m.setFillStyle(5164484)}),m.on("pointerout",()=>{m.setFillStyle(3447003)}),y.on("pointerdown",()=>{this.scene.stop(),this.scene.start(s)}),y.on("pointerover",()=>{y.setFillStyle(3066993)}),y.on("pointerout",()=>{y.setFillStyle(2600544)}),this.input.gamepad.on("down",(S,b)=>{b.index===0?(this.scene.stop(),this.scene.start(s)):b.index===1&&(this.scene.stop(),this.scene.start("MapSelectScene"))})}else{const d=this.add.rectangle(this.scale.width/2,c,h,l,2600544);d.setScrollFactor(0).setDepth(1002),d.setStrokeStyle(4,3066993,1),d.setInteractive(),this.add.text(this.scale.width/2,c,"Return to Menu",{fontSize:"20px",color:"#ffffff",fontStyle:"bold"}).setOrigin(.5).setScrollFactor(0).setDepth(1003),d.on("pointerdown",()=>{this.scene.stop(),this.scene.start("MapSelectScene")}),d.on("pointerover",()=>{d.setFillStyle(3066993)}),d.on("pointerout",()=>{d.setFillStyle(2600544)}),this.input.gamepad.on("down",(u,m)=>{(m.index===0||m.index===1)&&(this.scene.stop(),this.scene.start("MapSelectScene"))})}const f=[n,o,r,a];this.minimap&&f.forEach(d=>{d&&this.minimap.ignore(d)});for(let d=0;d<15;d++)this.time.delayedCall(d*100,()=>{const u=this.add.star(g.Math.Between(200,this.scale.width-200),g.Math.Between(100,this.scale.height-100),5,8,15,g.Display.Color.RandomRGB().color).setScrollFactor(0).setDepth(999);this.minimap&&this.minimap.ignore(u),this.tweens.add({targets:u,alpha:0,scale:1.5,rotation:Math.PI*2,duration:2e3,onComplete:()=>u.destroy()})})}toggleMiniMap(){if(this.minimap){this.miniMapConfig.visible=!this.miniMapConfig.visible,this.minimap.setVisible(this.miniMapConfig.visible),this.miniMapBorder&&this.miniMapBorder.setVisible(this.miniMapConfig.visible),this.miniMapLabel&&this.miniMapLabel.setVisible(this.miniMapConfig.visible),this.viewportIndicator&&this.viewportIndicator.setVisible(this.miniMapConfig.visible);const t=this.add.text(this.scale.width/2,50,this.miniMapConfig.visible?"Mini-map ON":"Mini-map OFF",{fontSize:"20px",color:this.miniMapConfig.visible?"#4ecdc4":"#ff6b6b",backgroundColor:"rgba(0,0,0,0.8)",padding:{x:15,y:8}}).setOrigin(.5).setScrollFactor(0);this.minimap&&this.minimap.ignore(t),this.tweens.add({targets:t,alpha:0,duration:1500,onComplete:()=>t.destroy()})}}}class pt extends B{constructor(t={}){super(t)}static create(t,e){return class extends B{constructor(){super({key:t,title:e.metadata.name,mapData:e})}}}}const A={Map001:G,Map002:q,Swing:U,Tower:tt};function ft(){const x=[];return Object.entries(A).forEach(([t,e])=>{try{x.push({key:t,title:e.metadata.name,difficulty:e.metadata.difficulty,description:e.metadata.description,mapData:e})}catch(i){console.warn(`Failed to load map data for key ${t}:`,i)}}),x.sort((t,e)=>{const i=parseInt(t.key.replace(/\D/g,""))||999,s=parseInt(e.key.replace(/\D/g,""))||999;return i-s}),x}function gt(){const x=Object.keys(A);return x.sort((t,e)=>{const i=parseInt(t.replace(/\D/g,""))||999,s=parseInt(e.replace(/\D/g,""))||999;return i-s}),x}function mt(x){const t=A[x];return t?pt.create(x,t):(console.error(`No map data found for key: ${x}`),null)}class bt extends g.Scene{constructor(){super({key:"MapSelectScene"}),this.selectedMapIndex=-1,this.mapButtons=[],this.maps=[],this.isFocused=!1}loadMapsFromDataRegistry(){const t=ft();return t.forEach(e=>{if(!this.scene.manager.getScene(e.key)){const i=mt(e.key);i&&this.scene.manager.add(e.key,i,!1)}}),t}create(){this.selectedMapIndex=-1,this.isFocused=!1,this.mapButtons=[],this.maps=this.loadMapsFromDataRegistry();const t=this.scale.width,e=this.scale.height,i=t<600,s=t/2;this.createBackground();const n=i?"36px":"48px";this.add.text(s,60,"Floppy Worm",{fontSize:n,color:"#4ecdc4",fontStyle:"bold",stroke:"#000000",strokeThickness:4}).setOrigin(.5);const o=i?"20px":"24px";this.add.text(s,110,"Select a Map",{fontSize:o,color:"#95a5a6",fontStyle:"italic"}).setOrigin(.5),this.userProgress=this.getUserProgress(),this.createMapGrid(),this.createUI(),this.setupInput();const r=i?"14px":"16px",a=i?"12px":"14px",c=i?"Tap to select • ESC to refresh":"Use ARROW KEYS, WASD, or GAMEPAD to navigate • ENTER, SPACE, or A button to select";this.add.text(s,e-60,c,{fontSize:r,color:"#7f8c8d",backgroundColor:"rgba(0,0,0,0.5)",padding:{x:15,y:8}}).setOrigin(.5),i||this.add.text(s,e-30,"ESC or B button: Refresh • Shift+R: Reset Progress",{fontSize:a,color:"#7f8c8d"}).setOrigin(.5)}getUserProgress(){const t=localStorage.getItem("floppyWormProgress");let e={};t&&(e=JSON.parse(t));let i=!1;return this.maps.forEach((s,n)=>{e[s.key]||(e[s.key]={unlocked:!0,completed:!1,bestTime:null},i=!0)}),i&&this.saveUserProgress(e),e}saveUserProgress(t=this.userProgress){localStorage.setItem("floppyWormProgress",JSON.stringify(t))}unlockNextMap(t){const e=this.maps.findIndex(i=>i.key===t);if(e!==-1){this.userProgress[t].completed=!0;const i=e+1;if(i<this.maps.length){const s=this.maps[i].key;this.userProgress[s].unlocked=!0}this.saveUserProgress()}}createMapGrid(){this.maps.forEach((r,a)=>{const c=Math.floor(a/2),l=200+a%2*380,p=180+c*70,f=this.userProgress[r.key].unlocked,d=this.userProgress[r.key].completed,u=this.add.rectangle(l,p,280,60);u.setInteractive(),u.on("pointerdown",()=>{this.selectedMapIndex=a,this.updateSelection(),this.selectMap()}),u.on("pointerover",()=>{this.selectedMapIndex=a,this.isFocused=!0,this.updateSelection()}),f?d?(u.setFillStyle(2600544,.8),u.setStrokeStyle(2,3066993,1)):(u.setFillStyle(3447003,.8),u.setStrokeStyle(2,5164484,1)):(u.setFillStyle(2899536,.5),u.setStrokeStyle(2,3426654,.8)),this.add.text(l-280/2+20,p-15,`${(a+1).toString().padStart(2,"0")}`,{fontSize:"24px",color:"#ffffff",fontStyle:"bold"});const m=f?"#ffffff":"#7f8c8d";this.add.text(l-280/2+60,p-10,r.title,{fontSize:"18px",color:m,fontStyle:d?"bold":"normal"});const y=p+15;for(let S=0;S<r.difficulty;S++)this.add.text(l-280/2+60+S*20,y,"★",{fontSize:"16px",color:f?"#f1c40f":"#7f8c8d"});d?this.add.text(l+280/2-20,p,"✓",{fontSize:"24px",color:"#2ecc71"}).setOrigin(.5):f||this.add.text(l+280/2-20,p,"🔒",{fontSize:"20px",color:"#7f8c8d"}).setOrigin(.5),this.mapButtons.push({background:u,mapKey:r.key,mapIndex:a,isUnlocked:f,x:l,y:p,width:280,height:60})}),this.updateSelection()}updateSelection(){if(this.mapButtons.forEach(t=>{const e=this.userProgress[t.mapKey],i=e.unlocked,s=e.completed;t.background.setStrokeStyle(2,i?s?3066993:5164484:3426654,t.mapIndex===this.selectedMapIndex?1:.8)}),this.isFocused&&this.selectedMapIndex>=0){const t=this.mapButtons[this.selectedMapIndex];t&&t.background.setStrokeStyle(6,16777215,1)}}createUI(){const t=Object.values(this.userProgress).filter(s=>s.completed).length,e=this.maps.length;this.add.text(this.scale.width/2,140,`Progress: ${t}/${e} maps completed`,{fontSize:"18px",color:"#4ecdc4"}).setOrigin(.5),this.add.text(this.scale.width-20,20,"Reset Progress",{fontSize:"16px",color:"#e74c3c",backgroundColor:"rgba(231, 76, 60, 0.2)",padding:{x:10,y:5}}).setOrigin(1,0).setInteractive().on("pointerdown",()=>{this.resetProgress()})}setupInput(){this.cursors=this.input.keyboard.createCursorKeys(),this.wasd=this.input.keyboard.addKeys("W,S,A,D"),this.enterKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.ENTER),this.spaceKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.SPACE),this.escKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.ESC),this.rKey=this.input.keyboard.addKey(g.Input.Keyboard.KeyCodes.R),this.gamepadInputTimer=0,this.gamepadInputDelay=200}update(){g.Input.Keyboard.JustDown(this.cursors.left)||g.Input.Keyboard.JustDown(this.wasd.A)?this.navigateMap(-1,0):g.Input.Keyboard.JustDown(this.cursors.right)||g.Input.Keyboard.JustDown(this.wasd.D)?this.navigateMap(1,0):g.Input.Keyboard.JustDown(this.cursors.up)||g.Input.Keyboard.JustDown(this.wasd.W)?this.navigateMap(0,-1):(g.Input.Keyboard.JustDown(this.cursors.down)||g.Input.Keyboard.JustDown(this.wasd.S))&&this.navigateMap(0,1),this.handleGamepadInput(),(g.Input.Keyboard.JustDown(this.enterKey)||g.Input.Keyboard.JustDown(this.spaceKey))&&this.selectMap(),g.Input.Keyboard.JustDown(this.escKey)&&this.scene.restart(),g.Input.Keyboard.JustDown(this.rKey)&&this.input.keyboard.keys[g.Input.Keyboard.KeyCodes.SHIFT].isDown&&this.resetProgress()}handleGamepadInput(){const t=this.time.now;if(t-this.gamepadInputTimer<this.gamepadInputDelay)return;const e=this.input.gamepad.gamepads;if(!e||e.length===0)return;const i=e[0];if(!i)return;let s=!1;i.left||i.leftStick.x<-.5?(this.navigateMap(-1,0),s=!0):i.right||i.leftStick.x>.5?(this.navigateMap(1,0),s=!0):i.up||i.leftStick.y<-.5?(this.navigateMap(0,-1),s=!0):(i.down||i.leftStick.y>.5)&&(this.navigateMap(0,1),s=!0),i.A&&(this.selectMap(),s=!0),i.B&&(this.scene.restart(),s=!0),s&&(this.gamepadInputTimer=t)}createBackground(){this.add.rectangle(this.scale.width/2,this.scale.height/2,this.scale.width,this.scale.height,2302771);const t=this.add.graphics();t.lineStyle(1,3355443,.2);const e=this.scale.width,i=this.scale.height;for(let s=0;s<=e;s+=40)t.moveTo(s,0),t.lineTo(s,i);for(let s=0;s<=i;s+=40)t.moveTo(0,s),t.lineTo(e,s);t.strokePath(),t.setDepth(-100)}navigateMap(t,e){if(!this.isFocused){this.isFocused=!0,this.selectedMapIndex=0,this.updateSelection();return}const i=2,s=Math.floor(this.selectedMapIndex/i),n=this.selectedMapIndex%i;let o=s+e,r=n+t;const a=Math.floor((this.maps.length-1)/i);o=g.Math.Clamp(o,0,a);const c=o===a&&this.maps.length%i||i;r=g.Math.Clamp(r,0,c-1);const h=o*i+r;h<this.maps.length&&(this.selectedMapIndex=h,this.updateSelection())}selectMap(){if(!this.isFocused||this.selectedMapIndex<0)return;const t=this.mapButtons[this.selectedMapIndex];if(t){const e=t.mapKey;this.userProgress[e].unlocked&&(this.isFocused=!1,this.selectedMapIndex=-1,this.updateSelection(),this.cameras.main.fadeOut(250,0,0,0),this.cameras.main.once("camerafadeoutcomplete",()=>{this.scene.stop(),this.scene.start(e)}))}}resetProgress(){confirm("Are you sure you want to reset all progress? This cannot be undone.")&&(localStorage.removeItem("floppyWormProgress"),this.scene.restart())}}export{bt as default};
